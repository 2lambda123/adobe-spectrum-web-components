import"./772010f3.js";import"./2f432e91.js";import{b as e}from"./26d112e5.js";import"./a394e5e5.js";import{S as t,y as s,e as i}from"./05d6b8f8.js";import{i as a}from"./d230bd74.js";import{l as o}from"./cda676e5.js";import{e as r}from"./f2f664f9.js";import"./26735633.js";import"./3e119a64.js";import"./91c6fd3c.js";import"./65a68590.js";import"./d9d604ee.js";import"./5a045148.js";import"./326c5ec6.js";import"./89c02dc9.js";import"./e2915a8f.js";import"./0d0f1026.js";import"./b1e18af9.js";var n=Object.defineProperty,c=Object.getOwnPropertyDescriptor,d=(e,t,s,i)=>{for(var a,o=i>1?void 0:i?c(t,s):t,r=e.length-1;r>=0;r--)(a=e[r])&&(o=(i?a(t,s,o):a(o))||o);return i&&o&&n(t,s,o),o};let p=class extends t{render(){return s`<slot @slotchange="${this.handleSlotchange}"></slot>`}firstUpdated(){this._delayedReady=new Promise((e=>this._resolveDelayedReady=e))}async getUpdateComplete(){const e=await super.getUpdateComplete();return await this._delayedReady,e}handleSlotchange({target:e}){e.assignedElements({flatten:!0}).length&&requestAnimationFrame((()=>{this._resolveDelayedReady()}))}};p=d([r("delayed-ready")],p);let l=class extends t{constructor(){super(),this.name="ui",this.package="",this.size="m",this.search="",this.icons=[],this.iconset=[],this.iconset=[],this.handleIconSetAdded=this.handleIconSetAdded.bind(this)}connectedCallback(){super.connectedCallback(),window.addEventListener("sp-iconset-added",this.handleIconSetAdded)}disconnectedCallback(){window.removeEventListener("sp-iconset-added",this.handleIconSetAdded),super.disconnectedCallback()}handleIconSetAdded(e){const{iconset:t}=e.detail;this.iconset=t.getIconList(),this.requestUpdate()}static get styles(){return[...e,a`:host{display:grid;grid-template-columns:repeat(auto-fit,minmax(150px,1fr));gap:20px;align-items:flex-start}.icon{display:flex;flex-direction:column;align-items:center;text-align:center;border-radius:var(--spectrum-alias-focus-ring-gap,var(--spectrum-global-dimension-static-size-25))}:host([package]) .icon{cursor:pointer}sp-icon{margin-bottom:10px}.search{grid-column-start:1;grid-column-end:-1}.icon[tabindex]:focus{outline:0}.icon[tabindex]:focus-visible{outline:var(--spectrum-alias-focus-ring-size) solid var(--spectrum-alias-focus-ring-color);outline-offset:calc(var(--spectrum-alias-focus-ring-gap,var(--spectrum-global-dimension-static-size-25)) * 2)}`]}handleKeydown(e,t){const{code:s}=e;"Enter"!==s&&"NumpadEnter"!==s&&"Space"!==s||(e.preventDefault(),this.shouldCopy(t))}shouldCopy(e){if(!this.package)return;const t=e.slice(1,e.length-1),s=`import '@spectrum-web-components/${this.package}/icons/${t}.js';`;this.dispatchEvent(new CustomEvent("copy-text",{bubbles:!0,composed:!0,detail:{message:"Import statement copied to clipboard!",text:s}}))}updateSearch(e){e.stopPropagation(),this.search=e.target.value}submit(e){e.stopPropagation(),this.updateSearch(e)}renderSearch(){const e=this.search?this.icons.filter((e=>-1!==e.name.toLowerCase().search(this.search))):this.icons;return s`<div class="search" part="search"><sp-field-label for="search">Spectrum icons:</sp-field-label><sp-search id="search" @keydown="${this.updateSearch}" @input="${this.updateSearch}" @submit="${this.submit}" .value="${this.search}" label="Search for icons" autocomplete="off"><sp-help-text slot="help-text">Showing ${e.length} of ${this.icons.length} available icons.</sp-help-text></sp-search></div>${e.map((e=>s`<bdo class="icon" part="icon" dir="ltr" class="icon" @click="${()=>this.shouldCopy(e.tag)}" @keydown="${t=>this.handleKeydown(t,e.tag)}" tabindex="${o(this.package?"0":void 0)}">${e.story(this.size)} ${e.tag}</bdo>`))}`}render(){return s`${this.icons.length?this.renderSearch():s`<slot></slot>`} ${this.iconset.map((e=>s`<bdo class="icon" dir="ltr"><sp-icon size="xl" name="${`${this.name}:${e}`}"></sp-icon>${e}</bdo>`))}`}};d([i()],l.prototype,"name",2),d([i()],l.prototype,"package",2),d([i()],l.prototype,"size",2),d([i()],l.prototype,"search",2),d([i({attribute:!1})],l.prototype,"icons",2),l=d([r("icons-demo")],l);export{p as DelayedReady,l as IconsDemo};
//# sourceMappingURL=1c9b94bf.js.map

{"version":3,"file":"406723e1.js","sources":["../../../node_modules/lit-element/lib/css-tag.js"],"sourcesContent":["/**\n@license\nCopyright (c) 2019 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\n/**\n * Whether the current browser supports `adoptedStyleSheets`.\n */\nexport const supportsAdoptingStyleSheets = (window.ShadowRoot) &&\n    (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) &&\n    ('adoptedStyleSheets' in Document.prototype) &&\n    ('replace' in CSSStyleSheet.prototype);\nconst constructionToken = Symbol();\nexport class CSSResult {\n    constructor(cssText, safeToken) {\n        if (safeToken !== constructionToken) {\n            throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n        this.cssText = cssText;\n    }\n    // Note, this is a getter so that it's lazy. In practice, this means\n    // stylesheets are not created until the first element instance is made.\n    get styleSheet() {\n        if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n                this._styleSheet = new CSSStyleSheet();\n                this._styleSheet.replaceSync(this.cssText);\n            }\n            else {\n                this._styleSheet = null;\n            }\n        }\n        return this._styleSheet;\n    }\n    toString() {\n        return this.cssText;\n    }\n}\n/**\n * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n *\n * This is unsafe because untrusted CSS text can be used to phone home\n * or exfiltrate data to an attacker controlled site. Take care to only use\n * this with trusted input.\n */\nexport const unsafeCSS = (value) => {\n    return new CSSResult(String(value), constructionToken);\n};\nconst textFromCSSResult = (value) => {\n    if (value instanceof CSSResult) {\n        return value.cssText;\n    }\n    else if (typeof value === 'number') {\n        return value;\n    }\n    else {\n        throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`);\n    }\n};\n/**\n * Template tag which which can be used with LitElement's [[LitElement.styles |\n * `styles`]] property to set element styles. For security reasons, only literal\n * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n * may be used inside a template string part.\n */\nexport const css = (strings, ...values) => {\n    const cssText = values.reduce((acc, v, idx) => acc + textFromCSSResult(v) + strings[idx + 1], strings[0]);\n    return new CSSResult(cssText, constructionToken);\n};\n//# sourceMappingURL=css-tag.js.map"],"names":["supportsAdoptingStyleSheets","window","ShadowRoot","undefined","ShadyCSS","nativeShadow","Document","prototype","CSSStyleSheet","constructionToken","Symbol","CSSResult","[object Object]","cssText","safeToken","Error","this","styleSheet","_styleSheet","replaceSync","unsafeCSS","value","String","css","strings","values","reduce","acc","v","idx","textFromCSSResult"],"mappings":"AAca,MAAAA,EAA+BC,OAAOC,kBAC1BC,IAApBF,OAAOG,UAA0BH,OAAOG,SAASC,eACjD,uBAAwBC,SAASC,WACjC,YAAaC,cAAcD,UAE1BE,EAAoBC,eAEbC,EAKXC,YAAYC,EAAiBC,GAC3B,GAAIA,IAAcL,EAChB,UAAUM,MACN,qEAGNC,KAAKH,QAAUA,EAKHI,iBAWZ,YAVyBd,IAArBa,KAAKE,cAGHlB,GACFgB,KAAKE,YAAc,IAAIV,cACvBQ,KAAKE,YAAYC,YAAYH,KAAKH,UAElCG,KAAKE,YAAc,WAGXA,YAGdN,WACE,YAAYC,SAWH,MAAAO,EAAaC,OACbV,EAAUW,OAAOD,GAAQZ,GAsBzBc,EACT,CAACC,KAAkCC,KACjC,MAAMZ,EAAUY,EAAOC,QACnB,CAACC,EAAKC,EAAGC,IAAQF,EAtBAN,CAAAA,IACzB,GAAIA,aAAiBV,EACnB,OAAOU,EAAMR,WACa,iBAAVQ,EAChB,OAAOA,EAEP,UAAUN,MACN,mEACIM,uGAcqBS,CAAkBF,GAAKJ,EAAQK,EAAM,IAC5DL,EAAQ,IACZ,WAAWb,EAAUE,EAASJ"}
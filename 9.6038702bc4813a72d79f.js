(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{1064:function(e,t,r){"use strict";r.r(t);var s=r(6),i=r(57),a=r(58);let o;var c=Object(s.b)(o||(o=(e=>e)`
#hero{margin-bottom:3em}#hero .spectrum-Article{padding-bottom:2em}#hero-buttons{margin-top:1em}#features{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between}.feature{flex:0 1 calc(33.33% - 30px);padding:0 0 20px;box-sizing:border-box}@media screen and (max-width:1100px){.feature{flex:0 1 calc(50% - 30px)}.feature:first-of-type{flex-basis:100%}}@media screen and (max-width:960px){.feature,.feature:first-of-type{flex:0 1 calc(33.33% - 30px)}}@media screen and (max-width:725px){.feature{flex:0 1 calc(50% - 30px)}.feature:first-of-type{flex-basis:100%}}@media screen and (max-width:525px){.feature{flex:0 1 100%}}#example{margin-top:2em}.spectrum-Heading4{margin-bottom:16px}
`));r(25),r(60),r(40);let d,n=e=>e;class p extends i.a{static get styles(){return[a.a,c]}render(){return Object(s.d)(d||(d=n` <section id="hero"> <div class="spectrum-Article"> <h1 class="spectrum-Heading spectrum-Heading--sizeXXXL spectrum-Heading--serif"> Spectrum Web Components </h1> </div> <p class="spectrum-Body spectrum-Body--sizeXL"> The Spectrum Web Components project is an implementation of <sp-link href="https://spectrum.adobe.com/">Spectrum, Adobe’s design system</sp-link>. It's designed to work with any web framework — or even without one. </p> <div id="hero-buttons"> <sp-button href="https://github.com/adobe/spectrum-web-components" variant="primary"> View on GitHub </sp-button> </div> </section> <section id="features"> <div class="feature"> <h2 class="spectrum-Heading spectrum-Heading--sizeS"> Standards based </h2> <p class="spectrum-Body spectrum-Body--sizeM"> <sp-link href="https://developer.mozilla.org/en-US/docs/Web/Web_Components"> Web Components </sp-link> are a set of technologies that work together, letting you create custom elements that work just like the standard HTML elements built into your browser. </p> </div> <div class="feature"> <h2 class="spectrum-Heading spectrum-Heading--sizeS"> Light weight </h2> <p class="spectrum-Body spectrum-Body--sizeM"> Spectrum Web Components are implemented using the <sp-link href="https://lit-element.polymer-project.org/"> LitElement </sp-link> base class. LitElement is designed for creating web components with a minimum amount of overhead. </p> </div> <div class="feature"> <h2 class="spectrum-Heading spectrum-Heading--sizeS"> Framework agnostic </h2> <p class="spectrum-Body spectrum-Body--sizeM"> You can use web components with any framework, since they’re supported and encapsulated at the browser level. </p> </div> </section> <section id="example" class="spectrum-Typography"> <div class="headerContainer"> <h2 class="spectrum-Heading spectrum-Heading--sizeM"> Sample element usage </h2> <sp-divider size="l"></sp-divider> </div> <code-example class="language-html"> &lt;sp-button variant='cta' href='components/button'&gt;Use Spectrum Web Component buttons&lt;/sp-button&gt; </code-example> </section> `))}}customElements.define("docs-home",p)},40:function(e,t,r){"use strict";var s=r(2),i=r(1081),a=r(1076),o=r(6);let c;var d=Object(o.b)(c||(c=(e=>e)`
:host([size=s]){--spectrum-divider-height:var(--spectrum-divider-s-height,var(--spectrum-global-dimension-size-10));--spectrum-divider-vertical-width:var(--spectrum-divider-s-vertical-width,var(--spectrum-global-dimension-size-10))}:host([size=m]){--spectrum-divider-height:var(--spectrum-divider-m-height,var(--spectrum-global-dimension-size-25));--spectrum-divider-vertical-width:var(--spectrum-divider-m-vertical-width,var(--spectrum-global-dimension-size-25))}:host([size=l]){--spectrum-divider-height:var(--spectrum-divider-l-height,var(--spectrum-global-dimension-size-50));--spectrum-divider-vertical-width:var(--spectrum-divider-l-vertical-width,var(--spectrum-global-dimension-size-50))}:host{--spectrum-divider-vertical-height:100%;width:100%;height:var(--spectrum-divider-height);overflow:visible;border:none;border-width:var(--spectrum-divider-height);border-radius:var(--spectrum-divider-height)}:host([vertical]){height:var(--spectrum-divider-vertical-height);width:var(--spectrum-divider-vertical-width)}:host{--spectrum-divider-l-background-color:var(--spectrum-global-color-gray-800);--spectrum-divider-m-background-color:var(--spectrum-global-color-gray-300);--spectrum-divider-s-background-color:var(--spectrum-global-color-gray-300)}:host([size=l]){background-color:var(--spectrum-divider-l-background-color,var(--spectrum-global-color-gray-800))}:host([size=m]){background-color:var(--spectrum-divider-m-background-color,var(--spectrum-global-color-gray-300))}:host([size=s]){background-color:var(--spectrum-divider-s-background-color,var(--spectrum-global-color-gray-300))}:host{display:block}hr{border:none;margin:0}
`));let n,p,l=e=>e;class m extends(Object(i.a)(a.a,{validSizes:["s","m","l"]})){constructor(){super(...arguments),this.vertical=!1}render(){return this.vertical?Object(o.d)(n||(n=l``)):Object(o.d)(p||(p=l`
            <hr />
        `))}}m.styles=[d],Object(s.a)([Object(o.e)({type:Boolean,reflect:!0})],m.prototype,"vertical",void 0),customElements.define("sp-divider",m)}}]);
//# sourceMappingURL=9.6038702bc4813a72d79f.js.map
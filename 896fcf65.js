import{t}from"./01bc7f71.js";import{l as e,o as s,e as r}from"./99636b0a.js";function o(t,r,o){let n,a=t;return"object"==typeof t?(a=t.slot,n=t):n={flatten:r},o?e({slot:a,flatten:r,selector:o}):s({descriptor:t=>({get(){var t,e;const s="slot"+(a?`[name=${a}]`:":not([name])"),r=null===(t=this.renderRoot)||void 0===t?void 0:t.querySelector(s);return null!==(e=null==r?void 0:r.assignedNodes(n))&&void 0!==e?e:[]},enumerable:!0,configurable:!0})})}const n=Symbol("slotContentIsPresent");function a(e,s){var r;const o=Array.isArray(s)?s:[s];return r=n,class extends e{constructor(...e){super(e),this[r]=new Map,this.managePresenceObservedSlot=()=>{let t=!1;o.forEach((e=>{const s=!!this.querySelector(e),r=this[n].get(e)||!1;t=t||r!==s,this[n].set(e,!!this.querySelector(e))})),t&&this.updateComplete.then((()=>{this.requestUpdate()}))},new t(this,{config:{childList:!0,subtree:!0},callback:()=>{this.managePresenceObservedSlot()}}),this.managePresenceObservedSlot()}get slotContentIsPresent(){if(1===o.length)return this[n].get(o[0])||!1;throw new Error("Multiple selectors provided to `ObserveSlotPresence` use `getSlotContentPresence(selector: string)` instead.")}getSlotContentPresence(t){if(this[n].has(t))return this[n].get(t)||!1;throw new Error(`The provided selector \`${t}\` is not being observed.`)}}}var i=Object.defineProperty,l=Object.getOwnPropertyDescriptor,c=(t,e,s,r)=>{for(var o,n=r>1?void 0:r?l(e,s):e,a=t.length-1;a>=0;a--)(o=t[a])&&(n=(r?o(e,s,n):o(n))||n);return r&&n&&i(e,s,n),n};const h=Symbol("assignedNodes");function d(e,s){var n;class a extends e{constructor(...e){super(e),this.slotHasContent=!1,new t(this,{config:{characterData:!0,subtree:!0},callback:t=>{for(const e of t)if("characterData"===e.type)return void this.manageTextObservedSlot()}})}manageTextObservedSlot(){if(!this[h])return;const t=[...this[h]].filter((t=>!!t.tagName||!!t.textContent&&t.textContent.trim()));this.slotHasContent=t.length>0}update(t){if(!this.hasUpdated){const{childNodes:t}=this,e=[...t].filter((t=>t.tagName?s?t.getAttribute("slot")===s:!t.hasAttribute("slot"):!!t.textContent&&t.textContent.trim()));this.slotHasContent=e.length>0}super.update(t)}firstUpdated(t){super.firstUpdated(t),this.updateComplete.then((()=>{this.manageTextObservedSlot()}))}}return n=h,c([r({type:Boolean,attribute:!1})],a.prototype,"slotHasContent",2),c([o(s,!0)],a.prototype,n,2),a}export{d as O,a,o};
//# sourceMappingURL=896fcf65.js.map

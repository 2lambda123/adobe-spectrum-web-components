(window.webpackJsonp=window.webpackJsonp||[]).push([[3],Array(19).concat([function(t,e,o){"use strict";o.d(e,"a",(function(){return s}));var n=o(1);function s(t){var e=[`${t}`];return e.raw=[`${t}`],Object(n.d)(e)}},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(t,e,o){var n={"./action-menu/README.md":83,"./actionbar/README.md":84,"./avatar/README.md":85,"./banner/README.md":86,"./bundle/README.md":87,"./button/README.md":88,"./button/action-button.md":89,"./card/README.md":90,"./checkbox/README.md":91,"./circleloader/README.md":92,"./dropdown/README.md":93,"./dropzone/README.md":94,"./icon/README.md":95,"./icons/README.md":96,"./iconset/README.md":97,"./illustrated-message/README.md":98,"./link/README.md":99,"./menu-group/README.md":100,"./menu-item/README.md":101,"./menu/README.md":102,"./overlay/README.md":103,"./popover/README.md":104,"./radio-group/README.md":105,"./radio/README.md":106,"./search/README.md":107,"./shared/README.md":108,"./sidenav/README.md":109,"./slider/README.md":110,"./status-light/README.md":111,"./styles/README.md":112,"./switch/README.md":113,"./tab-list/README.md":114,"./tab/README.md":115,"./tab/node_modules/@spectrum-css/tabs/README.md":116,"./textfield/README.md":117,"./textfield/textarea.md":118,"./theme/README.md":119,"./toast/README.md":120,"./tooltip/README.md":121};function s(t){var e=a(t);return o(e)}function a(t){if(!o.o(n,t)){var e=new Error("Cannot find module '"+t+"'");throw e.code="MODULE_NOT_FOUND",e}return n[t]}s.keys=function(){return Object.keys(n)},s.resolve=a,t.exports=s,s.id=82},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-action-menu /&gt;</code> is simply an action button with a Popover. Use an <code>&lt;sp-menu&gt;</code> element to outline the items that will be made available to the user when interacting with the <code>sp-action-menu</code> element.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/action-menu\n\n# or\n\nyarn add @spectrum-web-components/action-menu</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-action-menu&gt;\n    &lt;span slot=&quot;label&quot;&gt;More Actions&lt;/span&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-action-menu&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="no-visible-label" class="spectrum-Heading3">No visible label</h3>\n<p class="spectrum-Body3">The visible label that is be provided via the default <code>&lt;slot&gt;</code> interface can be ommitted in preference of an icon only interface. In this context be sure that the <code>&lt;sp-action-menu&gt;</code> remains accessible to screen readers by applying the <code>label</code> attribute. This will apply an <code>aria-label</code> attribute of the same value to the <code>&lt;botton&gt;</code> element that toggles the menu list.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-action-menu label=&quot;More Actions&quot;&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-action-menu&gt;</code-example>\n<h3 id="alternate-icon" class="spectrum-Heading3">Alternate icon</h3>\n<p class="spectrum-Body3">A custom icon can be supplied via the <code>icon</code> slot in order to replace the default meatballs icon.</p>\n<p class="spectrum-Body3"><sp-icons-medium></sp-icons-medium></p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-action-menu label=&quot;More actions&quot;&gt;\n    &lt;sp-icon slot=&quot;icon&quot; size=&quot;xxs&quot; name=&quot;ui:ChevronDownSmall&quot;&gt;&lt;/sp-icon&gt;\n    &lt;span slot=&quot;label&quot;&gt;Actions Under the Arrow&lt;/span&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-action-menu&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">An <code>sp-action-menu</code> parent will ensure that the wrapped <code>sp-menu</code> features a role of <code>menu</code> and contains children with the role <code>menuitem</code>. Upon focusing the <code>sp-action-menu</code> using <code>ArrowDown</code> will also open the menu while throwing focus into first selected (or unselected when none are selected) menu item for easy selecting of a new value.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">A <code>&lt;sp-actionbar&gt;</code> delivers a floating action bar that is a convenient way to deliver stateful actions in cases like selection mode. <code>&lt;sp-actionbar&gt;</code> can be deployed in two variants beyond the default: <code>[varient=&quot;fixed&quot;]</code>, to position the element in relation to the page, and <code>[variant=sticky]</code>, to position the content in relation to content that may scroll.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/actionbar\n\n# or\n\nyarn add @spectrum-web-components/actionbar</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-actionbar open&gt;\n    &lt;sp-checkbox indeterminate&gt;228 Selected&lt;/sp-checkbox&gt;\n    &lt;div class=&quot;spectrum-ButtonGroup&quot;&gt;\n        &lt;sp-action-button quiet&gt;\n            &lt;svg slot=&quot;icon&quot; id=&quot;spectrum-icon-18-Edit&quot; viewBox=&quot;0 0 36 36&quot;&gt;\n                &lt;path\n                    d=&quot;M33.567 8.2L27.8 2.432a1.215 1.215 0 0 0-.866-.353H26.9a1.371 1.371 0 0 0-.927.406L5.084 23.372a.99.99 0 0 0-.251.422L2.055 33.1c-.114.377.459.851.783.851a.251.251 0 0 0 .062-.007c.276-.063 7.866-2.344 9.311-2.778a.972.972 0 0 0 .414-.249l20.888-20.889a1.372 1.372 0 0 0 .4-.883 1.221 1.221 0 0 0-.346-.945zM11.4 29.316c-2.161.649-4.862 1.465-6.729 2.022l2.009-6.73z&quot;\n                &gt;&lt;/path&gt;\n            &lt;/svg&gt;\n        &lt;/sp-action-button&gt;\n        &lt;sp-action-button quiet&gt;\n            &lt;svg slot=&quot;icon&quot; id=&quot;spectrum-icon-18-More&quot; viewBox=&quot;0 0 36 36&quot;&gt;\n                &lt;circle cx=&quot;17.8&quot; cy=&quot;18.2&quot; r=&quot;3.4&quot;&gt;&lt;/circle&gt;\n                &lt;circle cx=&quot;29.5&quot; cy=&quot;18.2&quot; r=&quot;3.4&quot;&gt;&lt;/circle&gt;\n                &lt;circle cx=&quot;6.1&quot; cy=&quot;18.2&quot; r=&quot;3.4&quot;&gt;&lt;/circle&gt;\n            &lt;/svg&gt;\n        &lt;/sp-action-button&gt;\n    &lt;/div&gt;\n&lt;/sp-actionbar&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="fixed" class="spectrum-Heading3">Fixed</h3>\n<p class="spectrum-Body3">When using <code>[variant=&quot;fixed&quot;]</code>, the <code>&lt;sp-actionbar&gt;</code> will display by default at the bottom left of the window and can be customized via CSS from the outside.</p>\n<code-example class="language-html">&lt;h4&gt;Look down and to the left when toggling.&lt;/h4&gt;\n&lt;sp-actionbar variant=&quot;fixed&quot;&gt;\n    &lt;sp-checkbox indeterminate&gt;228 Selected&lt;/sp-checkbox&gt;\n&lt;/sp-actionbar&gt;\n&lt;sp-button\n    onclick=&quot;javascript:this.previousElementSibling.open = !this.previousElementSibling.open;&quot;\n&gt;\n    Toggle fixed actionbar\n&lt;/sp-button&gt;</code-example>\n<h3 id="sticky" class="spectrum-Heading3">Sticky</h3>\n<p class="spectrum-Body3">When using <code>[variant=&quot;sticky&quot;]</code>, be sure you&#39;ve spent some time touching up on <a href="https://medium.com/@elad/css-position-sticky-how-it-really-works-54cd01dc2d46" class="spectrum-Link">how <code>sticky</code> really works</a> to ensure the most successful delivery of your content.</p>\n<code-example class="language-html">&lt;section style=&quot;position: relative; max-height: 6em; overflow: auto;&quot;&gt;\n    &lt;h4&gt;Scroll down for toggle button&lt;/h4&gt;\n    &lt;sp-actionbar variant=&quot;sticky&quot; style=&quot;top: 0;&quot;&gt;\n        &lt;sp-checkbox indeterminate&gt;228 Selected&lt;/sp-checkbox&gt;\n    &lt;/sp-actionbar&gt;\n    &lt;p&gt;\n        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod\n        tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim\n        veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea\n        commodo consequat. Duis aute irure dolor in reprehenderit in voluptate\n        velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint\n        occaecat cupidatat non proident, sunt in culpa qui officia deserunt\n        mollit anim id est laborum.\n    &lt;/p&gt;\n    &lt;sp-button\n        onclick=&quot;javascript:this.previousElementSibling.previousElementSibling.open = !this.previousElementSibling.previousElementSibling.open;&quot;\n    &gt;\n        Toggle sticky actionbar\n    &lt;/sp-button&gt;\n&lt;/section&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-avatar</strong> is a great way to feature a visual representation of a user.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/avatar\n\n# or\n\nyarn add @spectrum-web-components/avatar</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-avatar label=&quot;Dog the User&quot; src=&quot;https://placedog.net/500/500&quot;&gt;&lt;/sp-avatar&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">The <code>label</code> attribute of the <code>&lt;sp-avatar&gt;</code> will be passed into the <code>&lt;img&gt;</code> element as the <code>alt</code> tag for use in defining a textual representation of the image displayed.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-banner</strong> is an additional label an existing component may have. Banners cannot be interacted with. Banners in Spectrum have three variations for different uses as well as the ability to place it overlaid in the top-right corner of a container.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/banner\n\n# or\n\nyarn add @spectrum-web-components/banner</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-banner&gt;\n    &lt;div slot=&quot;header&quot;&gt;Header text&lt;/div&gt;\n    &lt;div slot=&quot;content&quot;&gt;Content of the banner&lt;/div&gt;\n&lt;/sp-banner&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="info-banners" class="spectrum-Heading3">Info banners</h3>\n<p class="spectrum-Body3">Banners intended for providing information. This is the default banner variant.</p>\n<code-example class="language-html">&lt;sp-banner type=&quot;info&quot;&gt;\n    &lt;div slot=&quot;header&quot;&gt;This is an info banner&lt;/div&gt;\n    &lt;div slot=&quot;content&quot;&gt;Description here&lt;/div&gt;\n&lt;/sp-banner&gt;</code-example>\n<h3 id="warning-banners" class="spectrum-Heading3">Warning banners</h3>\n<p class="spectrum-Body3">Banners intended to provided a warning with a brief description. Less severe than an error banner.</p>\n<code-example class="language-html">&lt;sp-banner type=&quot;warning&quot;&gt;\n    &lt;div slot=&quot;header&quot;&gt;This is a warning banner&lt;/div&gt;\n    &lt;div slot=&quot;content&quot;&gt;Be careful!&lt;/div&gt;\n&lt;/sp-banner&gt;</code-example>\n<h3 id="error-banners" class="spectrum-Heading3">Error banners</h3>\n<p class="spectrum-Body3">Banners intended to indicate an error as occurred, with a brief description of the issue. More severe than a warning banner.</p>\n<code-example class="language-html">&lt;sp-banner type=&quot;error&quot;&gt;\n    &lt;div slot=&quot;header&quot;&gt;This is an error banner&lt;/div&gt;\n    &lt;div slot=&quot;content&quot;&gt;Something bad happened&lt;/div&gt;\n&lt;/sp-banner&gt;</code-example>\n<h2 id="corner-placement" class="spectrum-Heading2--quiet">Corner placement</h2>\n<p class="spectrum-Body3">In addition to the variant, banners can be placed in the top-right corner of its container by giving them a corner prop. Note that the position of the containing element needs to be either relative or absolute</p>\n<code-example class="language-html">&lt;div\n    style=&quot;width: 300px; height: 100px; background-color: #ba598b; position: relative;&quot;\n&gt;\n    &lt;sp-banner type=&quot;warning&quot; corner&gt;\n        &lt;div slot=&quot;header&quot;&gt;This banner is in a corner&lt;/div&gt;\n        &lt;div slot=&quot;content&quot;&gt;Neat!&lt;/div&gt;\n    &lt;/sp-banner&gt;\n&lt;/div&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">A Banner does not have a default semantic role communicated to assistive technology, but it does accept id, role and other aria- props that can be added to to improve accessibility depending on context.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><code>@spectrum-web-components/bundle</code> is a master dependancy that allows a project to import any and all of the the Spectrum Web Components. While it is a great approach to prototyping, the fact that is versions all of the Spectrum Web Components packages collectively means that depending on it can leave you with a lot of package udpates to manage at any one version change. For a more predicatable upgrade process we suggest that you depend upon individual packages directly, but hope you find this bundle productive when initially trying to get into the act of developing with Spectrum Web Components!</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/bundle\n\n# or\n\nyarn add @spectrum-web-components/bundle</code-example>'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-button</strong> represents an action a user can take. sp-buttons can be clicked\nor tapped to perform an action or to navigate to another page. sp-buttons in\nSpectrum have several variations for different uses and multiple levels of\nloudness for various attention-getting needs.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/button\n\n# or\n\nyarn add @spectrum-web-components/button</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-button&gt;Hello world&lt;/sp-button&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<p class="spectrum-Body3">There are many button variants to choose from in Spectrum. The <code>variant</code>\nattribute controls the main variant of the button, and a few other boolean\nattributes can be combined to apply sub-variants, e.g. <code>quiet</code>.</p>\n<h3 id="normal" class="spectrum-Heading3">Normal</h3>\n<code-example class="language-html">&lt;sp-button variant=&quot;cta&quot;&gt;CTA&lt;/sp-button&gt;\n&lt;sp-button variant=&quot;primary&quot;&gt;Primary&lt;/sp-button&gt;\n&lt;sp-button variant=&quot;secondary&quot;&gt;Secondary&lt;/sp-button&gt;\n&lt;sp-button variant=&quot;negative&quot;&gt;Negative&lt;/sp-button&gt;</code-example>\n<h3 id="quiet" class="spectrum-Heading3">Quiet</h3>\n<code-example class="language-html">&lt;sp-button quiet variant=&quot;primary&quot;&gt;Quiet Primary&lt;/sp-button&gt;\n&lt;sp-button quiet variant=&quot;secondary&quot;&gt;Quiet Secondary&lt;/sp-button&gt;\n&lt;sp-button quiet variant=&quot;negative&quot;&gt;Quiet Negative&lt;/sp-button&gt;</code-example>\n<h2 id="content" class="spectrum-Heading2--quiet">Content</h2>\n<p class="spectrum-Body3"><strong>sp-buttons</strong> can have a label, or a label with an icon. An icon is provided by\nplacing an icon component to the <code>icon</code> slot. The icon may be an <code>sp-icon</code> or an\nSVG.</p>\n<code-example class="language-html">&lt;sp-icons-medium&gt;&lt;/sp-icons-medium&gt;\n&lt;sp-button variant=&quot;primary&quot;&gt;Label only&lt;/sp-button&gt;\n&lt;sp-button variant=&quot;primary&quot;&gt;\n    &lt;sp-icon slot=&quot;icon&quot; size=&quot;s&quot; name=&quot;ui:HelpMedium&quot;&gt;&lt;/sp-icon&gt;\n    Icon + Label\n&lt;/sp-button&gt;\n&lt;sp-button variant=&quot;primary&quot;&gt;\n    &lt;svg\n        slot=&quot;icon&quot;\n        viewBox=&quot;0 0 36 36&quot;\n        focusable=&quot;false&quot;\n        aria-hidden=&quot;true&quot;\n        role=&quot;img&quot;\n    &gt;\n        &lt;path\n            d=&quot;M16 36a4.407 4.407 0 0 0 4-4h-8a4.407 4.407 0 0 0 4 4zm9.143-24.615c0-3.437-3.206-4.891-7.143-5.268V3a1.079 1.079 0 0 0-1.143-1h-1.714A1.079 1.079 0 0 0 14 3v3.117c-3.937.377-7.143 1.831-7.143 5.268C6.857 26.8 2 26.111 2 28.154V30h28v-1.846C30 26 25.143 26.8 25.143 11.385z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n    SVG Icon + Label\n&lt;/sp-button&gt;</code-example>\n<h2 id="states" class="spectrum-Heading2--quiet">States</h2>\n<p class="spectrum-Body3">In addition to the variant, <strong>sp-buttons</strong> have a disabled state visual state\nwhich can be applied by adding the attribute <code>disabled</code>. All spectrum-button\nvariants support the In addition to affectng the visual state, the <code>disabled</code>\nattribute prevents focus and disallows <code>click</code> events.</p>\n<code-example class="language-html">&lt;sp-button variant=&quot;primary&quot;&gt;Normal&lt;/sp-button&gt;\n&lt;sp-button variant=&quot;primary&quot; disabled&gt;Disabled&lt;/sp-button&gt;</code-example>\n<h2 id="handling-events" class="spectrum-Heading2--quiet">Handling events</h2>\n<p class="spectrum-Body3">Events handlers for clicks and other user actions can be registered on a\n<code>spectrum-button</code> just as on a normal HTML <code>button</code> element.</p>\n<code-example class="language-html">&lt;sp-button onclick=&quot;alert(&#39;spectrum-button clicked!&#39;)&quot;&gt;Click me&lt;/sp-button&gt;</code-example>\n<h3 id="autofocus" class="spectrum-Heading3">Autofocus</h3>\n<p class="spectrum-Body3">The <code>autofocus</code> attribute sets focus to the <strong>sp-button</strong> when the component\nmounts. This is useful for setting focus to a specific sp-button when a\npopover or dialog opens.</p>\n<code-example class="language-html">&lt;sp-button autofocus&gt;Confirm&lt;/sp-button&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-action-button&gt;</code> represents an action a user can take.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/button\n\n# or\n\nyarn add @spectrum-web-components/button</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-action-button&gt;\n    Do action\n&lt;/sp-action-button&gt;\n&lt;sp-action-button selected&gt;\n    Do action\n&lt;/sp-action-button&gt;\n&lt;sp-action-button disabled&gt;\n    Do action\n&lt;/sp-action-button&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="action-button-with-icon" class="spectrum-Heading3">Action button with icon</h3>\n<code-example class="language-html">&lt;sp-action-button&gt;\n    &lt;svg slot=&quot;icon&quot; id=&quot;spectrum-icon-18-Edit&quot; viewBox=&quot;0 0 36 36&quot;&gt;\n        &lt;path\n            d=&quot;M33.567 8.2L27.8 2.432a1.215 1.215 0 0 0-.866-.353H26.9a1.371 1.371 0 0 0-.927.406L5.084 23.372a.99.99 0 0 0-.251.422L2.055 33.1c-.114.377.459.851.783.851a.251.251 0 0 0 .062-.007c.276-.063 7.866-2.344 9.311-2.778a.972.972 0 0 0 .414-.249l20.888-20.889a1.372 1.372 0 0 0 .4-.883 1.221 1.221 0 0 0-.346-.945zM11.4 29.316c-2.161.649-4.862 1.465-6.729 2.022l2.009-6.73z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n    This is an action button\n&lt;/sp-action-button&gt;</code-example>\n<h3 id="icon-only-action-button" class="spectrum-Heading3">Icon only action button</h3>\n<code-example class="language-html">&lt;sp-action-button&gt;\n    &lt;svg slot=&quot;icon&quot; id=&quot;spectrum-icon-18-Edit&quot; viewBox=&quot;0 0 36 36&quot;&gt;\n        &lt;path\n            d=&quot;M33.567 8.2L27.8 2.432a1.215 1.215 0 0 0-.866-.353H26.9a1.371 1.371 0 0 0-.927.406L5.084 23.372a.99.99 0 0 0-.251.422L2.055 33.1c-.114.377.459.851.783.851a.251.251 0 0 0 .062-.007c.276-.063 7.866-2.344 9.311-2.778a.972.972 0 0 0 .414-.249l20.888-20.889a1.372 1.372 0 0 0 .4-.883 1.221 1.221 0 0 0-.346-.945zM11.4 29.316c-2.161.649-4.862 1.465-6.729 2.022l2.009-6.73z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n&lt;/sp-action-button&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-card</strong> represents a rectangular card that contains\na variety of text and image layouts. Cards are typically used\nto encapsulate units of a data set, such as a gallery of\nimage/caption pairs.\nSpectrum has several card variations for different uses.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/card\n\n# or\n\nyarn add @spectrum-web-components/card</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-card title=&quot;Card title&quot; subtitle=&quot;JPG&quot;&gt;\n    &lt;img slot=&quot;cover-photo&quot; src=&quot;https://picsum.photos/200/300&quot; /&gt;\n    &lt;div slot=&quot;footer&quot;&gt;Footer&lt;/div&gt;\n&lt;/sp-card&gt;</code-example>\n<h2 id="title" class="spectrum-Heading2--quiet">Title</h2>\n<p class="spectrum-Body3">By default, the title for an <code>sp-card</code> is applied via the <code>title</code> attribute, which is restricted to string content only. When HTML content is desired, a slot named <code>title</code> available for applying the title.</p>\n<code-example class="language-html">&lt;sp-card subtitle=&quot;JPG&quot;&gt;\n    &lt;h1 slot=&quot;title&quot;&gt;Card title&lt;/h1&gt;\n    &lt;img slot=&quot;cover-photo&quot; src=&quot;https://picsum.photos/200/300&quot; /&gt;\n    &lt;div slot=&quot;footer&quot;&gt;Footer&lt;/div&gt;\n&lt;/sp-card&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<p class="spectrum-Body3">There are multiple card variants to choose from in Spectrum. The <code>variant</code>\nattribute controls the main variant of the card.</p>\n<h3 id="normal" class="spectrum-Heading3">Normal</h3>\n<p class="spectrum-Body3">Normal cards can contain a title, a subtitle, a cover photo, and a footer.</p>\n<code-example class="language-html">&lt;sp-card title=&quot;Card title&quot; subtitle=&quot;JPG&quot;&gt;\n    &lt;img slot=&quot;cover-photo&quot; src=&quot;https://picsum.photos/200/300&quot; /&gt;\n    &lt;div slot=&quot;footer&quot;&gt;Footer&lt;/div&gt;\n&lt;/sp-card&gt;</code-example>\n<h3 id="quiet" class="spectrum-Heading3">Quiet</h3>\n<p class="spectrum-Body3">Quiet cards can contain a title, a subtitle, a cover photo, a description, and a footer.</p>\n<code-example class="language-html">&lt;div style=&quot;width: 208px; height: 264px&quot;&gt;\n    &lt;sp-card variant=&quot;quiet&quot; title=&quot;Card title&quot; subtitle=&quot;JPG&quot;&gt;\n        &lt;img slot=&quot;preview&quot; src=&quot;https://picsum.photos/200/300&quot; /&gt;\n        &lt;div slot=&quot;description&quot;&gt;10/15/18&lt;/div&gt;\n        &lt;div slot=&quot;footer&quot;&gt;Footer&lt;/div&gt;\n    &lt;/sp-card&gt;\n&lt;/div&gt;</code-example>\n<h3 id="gallery" class="spectrum-Heading3">Gallery</h3>\n<p class="spectrum-Body3">Gallery cards can contain a title, a subtitle, an image preview, a description, and a footer.</p>\n<code-example class="language-html">&lt;div style=&quot;width: 532px; height: 224px&quot;&gt;\n    &lt;sp-card variant=&quot;gallery&quot; title=&quot;Card title&quot; subtitle=&quot;JPG&quot;&gt;\n        &lt;img\n            slot=&quot;preview&quot;\n            src=&quot;https://picsum.photos/532/192&quot;\n            style=&quot;object-fit: cover&quot;\n        /&gt;\n        &lt;div slot=&quot;description&quot;&gt;10/15/18&lt;/div&gt;\n        &lt;div slot=&quot;footer&quot;&gt;Footer&lt;/div&gt;\n    &lt;/sp-card&gt;\n&lt;/div&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><strong>sp-checkbox</strong> allow users to select multiple items from a list of independent\noptions, or to mark an individual option as selected.</p>\n<p class="spectrum-Body3">Should I use a checkbox or a switch? Use a switch when activating something\ninstead of selecting.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/checkbox\n\n# or\n\nyarn add @spectrum-web-components/checkbox</code-example><h3 id="example" class="spectrum-Heading3">Example</h3>\n<p class="spectrum-Body3"><sp-icons-medium></sp-icons-medium></p>\n<code-example class="language-html">&lt;sp-checkbox&gt;Web component&lt;/sp-checkbox&gt;</code-example>\n<h3 id="standard-checkboxes" class="spectrum-Heading3">Standard checkboxes</h3>\n<p class="spectrum-Body3">Standard checkboxes are the default style for checkboxes. The blue color\nprovides a visual prominence that is optimal for forms, settings, lists or grids\nof assets, etc. where the checkboxes need to be noticed.</p>\n<code-example class="language-html">&lt;sp-checkbox checked&gt;Web component&lt;/sp-checkbox&gt;</code-example>\n<h3 id="quiet-checkboxes" class="spectrum-Heading3">Quiet checkboxes</h3>\n<p class="spectrum-Body3">Quiet checkboxes are a secondary style for checkboxes. The gray color provides a\nless prominent style than the standard checkboxes. They are optimal for\napplication panels where all visual elements are monochrome in order to direct\nfocus to the content.</p>\n<code-example class="language-html">&lt;sp-checkbox quiet&gt;Web component&lt;/sp-checkbox&gt;</code-example>\n<h3 id="states" class="spectrum-Heading3">States</h3>\n<p class="spectrum-Body3">In addition to the variant, sp-checkboxes have a number of attributes for\ncontrolling their visual state. All checkbox variants support the <code>disabled</code>,\n<code>indeterminate</code>, <code>invalid</code> attributes, which applies a disabled style to the\ncheckbox, and also prevents clicks from activating it.</p>\n<code-example class="language-html">&lt;div&gt;checked:&lt;/div&gt;\n&lt;sp-checkbox checked&gt;Web component&lt;/sp-checkbox&gt;\n\n&lt;div&gt;indeterminate:&lt;/div&gt;\n&lt;sp-checkbox indeterminate&gt;Web component&lt;/sp-checkbox&gt;\n\n&lt;div&gt;invalid:&lt;/div&gt;\n&lt;sp-checkbox invalid&gt;Web component&lt;/sp-checkbox&gt;\n\n&lt;div&gt;disabled:&lt;/div&gt;\n&lt;sp-checkbox disabled&gt;Web component&lt;/sp-checkbox&gt;</code-example>\n<h3 id="handling-events" class="spectrum-Heading3">Handling events</h3>\n<p class="spectrum-Body3">Event handlers for clicks and other user actions can be registered on an <code>sp-checkbox</code> just as a normal <code>&lt;input type=&quot;checkbox&quot;&gt;</code> element.</p>\n<code-example class="language-html">&lt;sp-checkbox id=&quot;checkbox-example&quot; onclick=&quot;javascript:alert(&#39;Click&#39;)&quot;&gt;\n    Web component\n&lt;/sp-checkbox&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">Checkboxes are accessible by default, rendered in HTML using the <code>&lt;input type=&quot;checkbox&quot;&gt;</code> element. When the checkbox is set as <code>indeterminate</code> or\n<code>invalid</code>, the appropriate ARIA state attribute will automatically be applied.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-circleloader&gt;</code> shows the progression of a system operation such as downloading, uploading, processing, etc. in a visual way. It can represent determinate or indeterminate progress.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/circleloader\n\n# or\n\nyarn add @spectrum-web-components/circleloader</code-example><h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="default" class="spectrum-Heading3">Default</h3>\n<p class="spectrum-Body3">An <code>&lt;sp-circleloader&gt;</code> is used to visually show the progression of a system operation such as downloading, uploading, processing, etc.</p>\n<code-example class="language-html">&lt;div\n    style=&quot;width: 250px; height: 150px; display: flex; align-items: center; justify-content: space-around;&quot;\n&gt;\n    &lt;sp-circleloader progress=&quot;71&quot; size=&quot;small&quot;&gt;&lt;/sp-circleloader&gt;\n    &lt;sp-circleloader progress=&quot;22&quot;&gt;&lt;/sp-circleloader&gt;\n    &lt;sp-circleloader progress=&quot;86&quot; size=&quot;large&quot;&gt;&lt;/sp-circleloader&gt;\n&lt;/div&gt;</code-example>\n<h3 id="over-background" class="spectrum-Heading3">Over background</h3>\n<p class="spectrum-Body3">When a loader needs to be placed on top of a colored background, use the over background loader as signified by <code>[over-background]</code>. This loader uses a white opaque color no matter the background. Make sure the background offers enough contrast for the loader to be legible.</p>\n<code-example class="language-html">&lt;div\n    style=&quot;width: 250px; height: 150px; display: flex; align-items: center; justify-content: space-around;  background-color: rgba(0,0,0,0.4);&quot;\n&gt;\n    &lt;sp-circleloader\n        progress=&quot;42&quot;\n        over-background\n        size=&quot;small&quot;\n    &gt;&lt;/sp-circleloader&gt;\n    &lt;sp-circleloader progress=&quot;7&quot; over-background&gt;&lt;/sp-circleloader&gt;\n    &lt;sp-circleloader\n        progress=&quot;68&quot;\n        over-background\n        size=&quot;large&quot;\n    &gt;&lt;/sp-circleloader&gt;\n&lt;/div&gt;</code-example>\n<h3 id="indeterminate" class="spectrum-Heading3">Indeterminate</h3>\n<p class="spectrum-Body3">A circle loader can be either determinate or indeterminate as signified by <code>[indeterminate]</code>. By default, loaders are determinate. Use a determinate loader when progress can be calculated against a specific goal (e.g., downloading a file of a known size). Use an indeterminate loader when progress is happening but the time or effort to completion can’t be determined (e.g., attempting to reconnect to a server).</p>\n<code-example class="language-html">&lt;div\n    style=&quot;width: 250px; height: 150px; display: flex; align-items: center; justify-content: space-around;&quot;\n&gt;\n    &lt;sp-circleloader indeterminate size=&quot;small&quot;&gt;&lt;/sp-circleloader&gt;\n    &lt;sp-circleloader indeterminate&gt;&lt;/sp-circleloader&gt;\n    &lt;sp-circleloader indeterminate size=&quot;large&quot;&gt;&lt;/sp-circleloader&gt;\n&lt;/div&gt;</code-example>\n<h3 id="size" class="spectrum-Heading3">Size</h3>\n<p class="spectrum-Body3">Circle loaders come in 3 sizes: small (<code>[size=&quot;small&quot;]</code>), medium (default), or large (<code>[size=&quot;large&quot;]</code>). These are available to fit various contexts. For example, the small loader can be used in place of an icon or in tight spaces, while the large one can be used for full-page loading.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-dropdown /&gt;</code> is an alternative to HTML&#39;s <code>select</code> element. Use an <code>&lt;sp-menu&gt;</code> element to outline the options that will be made available to the user when interacting with the <code>sp-dropdown</code> element.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/dropdown\n\n# or\n\nyarn add @spectrum-web-components/dropdown</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-dropdown\n    label=&quot;Select a Country with a very long label, too long in fact&quot;\n&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-dropdown&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="invalid" class="spectrum-Heading3">Invalid</h3>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-dropdown\n    label=&quot;Select a Country with a very long label, too long in fact&quot;\n    invalid\n&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-dropdown&gt;</code-example>\n<h3 id="disabled" class="spectrum-Heading3">Disabled</h3>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-dropdown\n    label=&quot;Select a Country with a very long label, too long in fact&quot;\n    disabled\n&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-dropdown&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">An <code>sp-dropdown</code> parent will ensure that the wrapped <code>sp-menu</code> features a role of <code>listbox</code> and contains children with the role <code>option</code>. Upon focusing the <code>sp-dropdown</code> using <code>ArrowDown</code> will also open the menu while throwing focus into first selected (or unselected when none are selected) menu item for easy selecting of a new value.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">A <strong>sp-dropzone</strong> is an area on the screen into which an object can be dragged and dropped to accomplish a task. For example, a DropZone might be used in an upload workflow to enable the user to simply drop a file from their operating system into the DropZone, which is a more efficient and intuitive action, rather than utilize the standard &quot;Choose File&quot; dialog.</p>\n<p class="spectrum-Body3">DropZones should be used with an IllustratedMessage component as a child if the drop zone is empty, otherwise the existing content should be passed as a child.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/dropzone\n\n# or\n\nyarn add @spectrum-web-components/dropzone</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-dropzone id=&quot;dropzone&quot; tabindex=&quot;1&quot; style=&quot;width: 400px; height: 200px&quot;&gt;\n    &lt;sp-illustrated-message heading=&quot;Drag and Drop Your File&quot;&gt;\n        &lt;svg\n            xmlns=&quot;http://www.w3.org/2000/svg&quot;\n            viewBox=&quot;0 0 150 103&quot;\n            width=&quot;150&quot;\n            height=&quot;103&quot;\n            viewBox=&quot;0 0 150 103&quot;\n        &gt;\n            &lt;path\n                d=&quot;M133.7,8.5h-118c-1.9,0-3.5,1.6-3.5,3.5v27c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5V23.5h119V92c0,0.3-0.2,0.5-0.5,0.5h-118c-0.3,0-0.5-0.2-0.5-0.5V69c0-0.8-0.7-1.5-1.5-1.5s-1.5,0.7-1.5,1.5v23c0,1.9,1.6,3.5,3.5,3.5h118c1.9,0,3.5-1.6,3.5-3.5V12C137.2,10.1,135.6,8.5,133.7,8.5z M15.2,21.5V12c0-0.3,0.2-0.5,0.5-0.5h118c0.3,0,0.5,0.2,0.5,0.5v9.5H15.2z M32.6,16.5c0,0.6-0.4,1-1,1h-10c-0.6,0-1-0.4-1-1s0.4-1,1-1h10C32.2,15.5,32.6,15.9,32.6,16.5z M13.6,56.1l-8.6,8.5C4.8,65,4.4,65.1,4,65.1c-0.4,0-0.8-0.1-1.1-0.4c-0.6-0.6-0.6-1.5,0-2.1l8.6-8.5l-8.6-8.5c-0.6-0.6-0.6-1.5,0-2.1c0.6-0.6,1.5-0.6,2.1,0l8.6,8.5l8.6-8.5c0.6-0.6,1.5-0.6,2.1,0c0.6,0.6,0.6,1.5,0,2.1L15.8,54l8.6,8.5c0.6,0.6,0.6,1.5,0,2.1c-0.3,0.3-0.7,0.4-1.1,0.4c-0.4,0-0.8-0.1-1.1-0.4L13.6,56.1z&quot;\n            &gt;&lt;/path&gt;\n        &lt;/svg&gt;\n    &lt;/sp-illustrated-message&gt;\n\n    &lt;div style=&quot;color: grey&quot;&gt;\n        &lt;div&gt;\n            &lt;label for=&quot;file-input&quot;&gt;\n                &lt;sp-link&gt;Select a File&lt;/sp-link&gt;\n                from your computer\n            &lt;/label&gt;\n            &lt;input type=&quot;file&quot; id=&quot;file-input&quot; style=&quot;display: none&quot; /&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            or\n            &lt;sp-link href=&quot;http://stock.adobe.com&quot; target=&quot;blank&quot;&gt;\n                Search Adobe Stock\n            &lt;/sp-link&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/sp-dropzone&gt;</code-example>\n<h3 id="dragged" class="spectrum-Heading3">Dragged</h3>\n<code-example class="language-html">&lt;sp-dropzone\n    id=&quot;dropzone&quot;\n    tabindex=&quot;1&quot;\n    dragged\n    style=&quot;width: 400px; height: 200px&quot;\n&gt;\n    &lt;sp-illustrated-message heading=&quot;Drag and Drop Your File&quot;&gt;\n        &lt;svg\n            xmlns=&quot;http://www.w3.org/2000/svg&quot;\n            viewBox=&quot;0 0 150 103&quot;\n            width=&quot;150&quot;\n            height=&quot;103&quot;\n            viewBox=&quot;0 0 150 103&quot;\n        &gt;\n            &lt;path\n                d=&quot;M133.7,8.5h-118c-1.9,0-3.5,1.6-3.5,3.5v27c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5V23.5h119V92c0,0.3-0.2,0.5-0.5,0.5h-118c-0.3,0-0.5-0.2-0.5-0.5V69c0-0.8-0.7-1.5-1.5-1.5s-1.5,0.7-1.5,1.5v23c0,1.9,1.6,3.5,3.5,3.5h118c1.9,0,3.5-1.6,3.5-3.5V12C137.2,10.1,135.6,8.5,133.7,8.5z M15.2,21.5V12c0-0.3,0.2-0.5,0.5-0.5h118c0.3,0,0.5,0.2,0.5,0.5v9.5H15.2z M32.6,16.5c0,0.6-0.4,1-1,1h-10c-0.6,0-1-0.4-1-1s0.4-1,1-1h10C32.2,15.5,32.6,15.9,32.6,16.5z M13.6,56.1l-8.6,8.5C4.8,65,4.4,65.1,4,65.1c-0.4,0-0.8-0.1-1.1-0.4c-0.6-0.6-0.6-1.5,0-2.1l8.6-8.5l-8.6-8.5c-0.6-0.6-0.6-1.5,0-2.1c0.6-0.6,1.5-0.6,2.1,0l8.6,8.5l8.6-8.5c0.6-0.6,1.5-0.6,2.1,0c0.6,0.6,0.6,1.5,0,2.1L15.8,54l8.6,8.5c0.6,0.6,0.6,1.5,0,2.1c-0.3,0.3-0.7,0.4-1.1,0.4c-0.4,0-0.8-0.1-1.1-0.4L13.6,56.1z&quot;\n            &gt;&lt;/path&gt;\n        &lt;/svg&gt;\n    &lt;/sp-illustrated-message&gt;\n\n    &lt;div style=&quot;color: grey&quot;&gt;\n        &lt;div&gt;\n            &lt;label for=&quot;file-input&quot;&gt;\n                &lt;sp-link&gt;Select a File&lt;/sp-link&gt;\n                from your computer\n            &lt;/label&gt;\n            &lt;input type=&quot;file&quot; id=&quot;file-input&quot; style=&quot;display: none&quot; /&gt;\n        &lt;/div&gt;\n        &lt;div&gt;\n            or\n            &lt;sp-link href=&quot;http://stock.adobe.com&quot; target=&quot;blank&quot;&gt;\n                Search Adobe Stock\n            &lt;/sp-link&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/sp-dropzone&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><code>&lt;sp-icon&gt;</code> renders an icon to the page. By default the <code>name</code> attribute will pair with separately registered icon sets to deliver the icons. When not present, <code>&lt;sp-icon&gt;</code> will subsequently check for its <code>src</code> attribute which could populate the icon via an image, and then fallback to any slotted content for an element based icon.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/icon\n\n# or\n\nyarn add @spectrum-web-components/icon</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<p class="spectrum-Body3">Names icons on this page are provided by the <a href="components/icons" class="spectrum-Link"><code>&lt;sp-icons-medium&gt;</code> icon set</a>. Learn how to create your own via <a href="components/iconset" class="spectrum-Link"><code>sp-iconset</code></a>.</p>\n<code-example class="language-html">&lt;sp-icons-medium&gt;&lt;/sp-icons-medium&gt;\n&lt;sp-icon name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<p class="spectrum-Body3">Icons are available in various sizes in Spectrum ranging from <code>xxs</code> to <code>xxl</code>, <code>m</code> being the default. We can specify the size via <code>size</code> attribute.</p>\n<h3 id="size-variants" class="spectrum-Heading3">Size variants</h3>\n<code-example class="language-html">&lt;sp-icon size=&quot;xxs&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;xs&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;s&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;m&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;l&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;xl&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;xxl&quot; name=&quot;ui:Magnifier&quot;&gt;&lt;/sp-icon&gt;</code-example>\n<h2 id="color-icon" class="spectrum-Heading2--quiet">Color icon</h2>\n<p class="spectrum-Body3">Icons apply their color as <code>currentColor</code> so change the <code>color</code> property of the element for customization.</p>\n<code-example class="language-html">&lt;sp-icon name=&quot;ui:Magnifier&quot; style=&quot;color: red;&quot;&gt;&lt;/sp-icon&gt;</code-example>\n<h2 id="image-icon" class="spectrum-Heading2--quiet">Image icon</h2>\n<p class="spectrum-Body3">An image icon can be supplied via the <code>src</code> attribute. Remember that you cannot style the contents of an image via CSS, so use graphics that are appropriately prepared for including in your applications design requirements.</p>\n<code-example class="language-html">&lt;sp-icon\n    size=&quot;xxs&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;\n&lt;sp-icon\n    size=&quot;xs&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;\n&lt;sp-icon\n    size=&quot;s&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;\n&lt;sp-icon\n    size=&quot;m&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;\n&lt;sp-icon\n    size=&quot;l&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;\n&lt;sp-icon\n    size=&quot;xl&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;\n&lt;sp-icon\n    size=&quot;xxl&quot;\n    src=&quot;https://spectrum.corp.adobe.com/static/icons/workflow_22/Smock_FullScreen_22_N.svg&quot;\n&gt;&lt;/sp-icon&gt;</code-example>\n<h2 id="element-icon" class="spectrum-Heading2--quiet">Element icon</h2>\n<p class="spectrum-Body3">Icons can also be supplied as HTML elements to be applied via the default <code>&lt;slot&gt;</code>.</p>\n<code-example class="language-html">&lt;sp-icon size=&quot;xxs&quot;&gt;\n    &lt;svg\n        xmlns=&quot;http://www.w3.org/2000/svg&quot;\n        viewBox=&quot;0 0 22 22&quot;\n        role=&quot;img&quot;\n        fill=&quot;currentColor&quot;\n        height=&quot;18&quot;\n        width=&quot;18&quot;\n        aria-hidden=&quot;true&quot;\n    &gt;\n        &lt;path\n            d=&quot;M19.75,10.04h-15l5.97-5.97a.483.483,0,0,0,0-.7l-.35-.36a.513.513,0,0,0-.71,0L2.24,10.44a.513.513,0,0,0,0,.71l7.39,7.84a.513.513,0,0,0,.71,0l.35-.35a.513.513,0,0,0,0-.71L4.76,11.5H19.75a.25.25,0,0,0,.25-.25v-.96A.25.25,0,0,0,19.75,10.04Z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n&lt;/sp-icon&gt;\n&lt;sp-icon&gt;\n    &lt;svg\n        xmlns=&quot;http://www.w3.org/2000/svg&quot;\n        viewBox=&quot;0 0 22 22&quot;\n        role=&quot;img&quot;\n        fill=&quot;currentColor&quot;\n        height=&quot;18&quot;\n        width=&quot;18&quot;\n        aria-hidden=&quot;true&quot;\n    &gt;\n        &lt;path\n            d=&quot;M19.75,10.04h-15l5.97-5.97a.483.483,0,0,0,0-.7l-.35-.36a.513.513,0,0,0-.71,0L2.24,10.44a.513.513,0,0,0,0,.71l7.39,7.84a.513.513,0,0,0,.71,0l.35-.35a.513.513,0,0,0,0-.71L4.76,11.5H19.75a.25.25,0,0,0,.25-.25v-.96A.25.25,0,0,0,19.75,10.04Z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n&lt;/sp-icon&gt;\n&lt;sp-icon size=&quot;xxl&quot;&gt;\n    &lt;svg\n        xmlns=&quot;http://www.w3.org/2000/svg&quot;\n        viewBox=&quot;0 0 22 22&quot;\n        role=&quot;img&quot;\n        fill=&quot;currentColor&quot;\n        height=&quot;18&quot;\n        width=&quot;18&quot;\n        aria-hidden=&quot;true&quot;\n    &gt;\n        &lt;path\n            d=&quot;M19.75,10.04h-15l5.97-5.97a.483.483,0,0,0,0-.7l-.35-.36a.513.513,0,0,0-.71,0L2.24,10.44a.513.513,0,0,0,0,.71l7.39,7.84a.513.513,0,0,0,.71,0l.35-.35a.513.513,0,0,0,0-.71L4.76,11.5H19.75a.25.25,0,0,0,.25-.25v-.96A.25.25,0,0,0,19.75,10.04Z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n&lt;/sp-icon&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3"><code>aria-hidden</code> is set to true by default for Icons. The <code>label</code> attribute suppresses this and adds the label text as the aria-label of the icon.</p>\n<code-example class="language-html">&lt;sp-icon name=&quot;ui:Magnifier&quot; label=&quot;Magnify&quot;&gt;&lt;/sp-icon&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">The <code>&lt;sp-icons-medium&gt;</code> and <code>&lt;sp-icons-large&gt;</code> elements that are included in this package supply your application with the Spectrum CSS Icons at both the medium and large sizes for use via the <code>&lt;sp-icon&gt;</code> element also provided by the Spectrum Web Components library. Include at least one of these elements in a project that makes use of icons in these sets, but feel free to include these sets in the scope of any element that leverages them as they will be deduplicated as appropriate to ensure all of your components are able to deliver the icons included therein.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/icons\n\n# or\n\nyarn add @spectrum-web-components/icons</code-example>'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">Extend either the <code>Iconset</code> or <code>IconsetSVG</code> exports of this package to supply your application with a custom icon set to power the use of <code>&lt;sp-icon&gt;</code> elements throughout. Give your new icon set a custom name, and you&#39;ll be ready to supply them as <code>&lt;sp-icon name=&quot;custom-icons:icon&#39;&gt;</code> across your application.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/iconset\n\n# or\n\nyarn add @spectrum-web-components/iconset</code-example><h3 id="example" class="spectrum-Heading3">Example</h3>\n<code-example class="language-ts">import { TemplateResult } from &#39;lit-element&#39;;\n\nimport { CustomIconSet } from &#39;your-icon-set.js&#39;;\n\nimport iconsSVG from &#39;./icons-large.svg.js&#39;;\n\nexport class IconsLarge extends IconsetSVG {\n    public constructor() {\n        super();\n        this.name = &#39;custom-icons&#39;; // default iconset name for these icons\n    }\n\n    protected renderDefaultContent(): TemplateResult {\n        return CustomIconSet;\n    }\n}</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-illustrated-message</strong> displays an illustration icon and a message, usually in an empty state or on an error page. It is also used inside a DropZone.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/illustrated-message\n\n# or\n\nyarn add @spectrum-web-components/illustrated-message</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-illustrated-message\n    heading=&quot;Drag and Drop Your File&quot;\n    description=&quot;This message has italics&quot;\n&gt;\n    &lt;svg\n        xmlns=&quot;http://www.w3.org/2000/svg&quot;\n        viewBox=&quot;0 0 150 103&quot;\n        width=&quot;150&quot;\n        height=&quot;103&quot;\n        viewBox=&quot;0 0 150 103&quot;\n    &gt;\n        &lt;path\n            d=&quot;M133.7,8.5h-118c-1.9,0-3.5,1.6-3.5,3.5v27c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5V23.5h119V92c0,0.3-0.2,0.5-0.5,0.5h-118c-0.3,0-0.5-0.2-0.5-0.5V69c0-0.8-0.7-1.5-1.5-1.5s-1.5,0.7-1.5,1.5v23c0,1.9,1.6,3.5,3.5,3.5h118c1.9,0,3.5-1.6,3.5-3.5V12C137.2,10.1,135.6,8.5,133.7,8.5z M15.2,21.5V12c0-0.3,0.2-0.5,0.5-0.5h118c0.3,0,0.5,0.2,0.5,0.5v9.5H15.2z M32.6,16.5c0,0.6-0.4,1-1,1h-10c-0.6,0-1-0.4-1-1s0.4-1,1-1h10C32.2,15.5,32.6,15.9,32.6,16.5z M13.6,56.1l-8.6,8.5C4.8,65,4.4,65.1,4,65.1c-0.4,0-0.8-0.1-1.1-0.4c-0.6-0.6-0.6-1.5,0-2.1l8.6-8.5l-8.6-8.5c-0.6-0.6-0.6-1.5,0-2.1c0.6-0.6,1.5-0.6,2.1,0l8.6,8.5l8.6-8.5c0.6-0.6,1.5-0.6,2.1,0c0.6,0.6,0.6,1.5,0,2.1L15.8,54l8.6,8.5c0.6,0.6,0.6,1.5,0,2.1c-0.3,0.3-0.7,0.4-1.1,0.4c-0.4,0-0.8-0.1-1.1-0.4L13.6,56.1z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n&lt;/sp-illustrated-message&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="cta-variant" class="spectrum-Heading3">CTA variant</h3>\n<p class="spectrum-Body3">In this variant, the description text is not italisized.</p>\n<code-example class="language-html">&lt;sp-illustrated-message\n    heading=&quot;Drag and Drop Your File&quot;\n    description=&quot;This message has no italics&quot;\n    cta\n&gt;\n    &lt;svg\n        xmlns=&quot;http://www.w3.org/2000/svg&quot;\n        viewBox=&quot;0 0 150 103&quot;\n        width=&quot;150&quot;\n        height=&quot;103&quot;\n        viewBox=&quot;0 0 150 103&quot;\n    &gt;\n        &lt;path\n            d=&quot;M133.7,8.5h-118c-1.9,0-3.5,1.6-3.5,3.5v27c0,0.8,0.7,1.5,1.5,1.5s1.5-0.7,1.5-1.5V23.5h119V92c0,0.3-0.2,0.5-0.5,0.5h-118c-0.3,0-0.5-0.2-0.5-0.5V69c0-0.8-0.7-1.5-1.5-1.5s-1.5,0.7-1.5,1.5v23c0,1.9,1.6,3.5,3.5,3.5h118c1.9,0,3.5-1.6,3.5-3.5V12C137.2,10.1,135.6,8.5,133.7,8.5z M15.2,21.5V12c0-0.3,0.2-0.5,0.5-0.5h118c0.3,0,0.5,0.2,0.5,0.5v9.5H15.2z M32.6,16.5c0,0.6-0.4,1-1,1h-10c-0.6,0-1-0.4-1-1s0.4-1,1-1h10C32.2,15.5,32.6,15.9,32.6,16.5z M13.6,56.1l-8.6,8.5C4.8,65,4.4,65.1,4,65.1c-0.4,0-0.8-0.1-1.1-0.4c-0.6-0.6-0.6-1.5,0-2.1l8.6-8.5l-8.6-8.5c-0.6-0.6-0.6-1.5,0-2.1c0.6-0.6,1.5-0.6,2.1,0l8.6,8.5l8.6-8.5c0.6-0.6,1.5-0.6,2.1,0c0.6,0.6,0.6,1.5,0,2.1L15.8,54l8.6,8.5c0.6,0.6,0.6,1.5,0,2.1c-0.3,0.3-0.7,0.4-1.1,0.4c-0.4,0-0.8-0.1-1.1-0.4L13.6,56.1z&quot;\n        &gt;&lt;/path&gt;\n    &lt;/svg&gt;\n&lt;/sp-illustrated-message&gt;</code-example>\n<h2 id="content" class="spectrum-Heading2--quiet">Content</h2>\n<p class="spectrum-Body3">The popover accepts an svg into its default slot. This svg is displayed as an illustration above the heading and description</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-link</strong> allow users to navigate to a different location. They can be presented in-line inside a paragraph or as a standalone text.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/link\n\n# or\n\nyarn add @spectrum-web-components/link</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">This is an &lt;sp-link href=&quot;#&quot;&gt;example link&lt;/sp-link&gt;.</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="standard-links" class="spectrum-Heading3">Standard links</h3>\n<p class="spectrum-Body3">Standard links can follow any of the character styles defined in Spectrum. Therefore, they can be displayed in various font sizes and weights. Standard links appear blue, in order to stand out from the rest of the text and be recognized as interactive.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">This is a &lt;sp-link href=&quot;#&quot;&gt;standard link&lt;/sp-link&gt;.</code-example>\n<h3 id="quiet-links" class="spectrum-Heading3">Quiet links</h3>\n<p class="spectrum-Body3">Quiet links appear with an underline and use the default text color. The subdued appearance is optimal for use in content lower in your application’s hierarchy such as links in a footer.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">This is a &lt;sp-link quiet href=&quot;#&quot;&gt;quiet link&lt;/sp-link&gt;.</code-example>\n<h3 id="links-over-backgrounds" class="spectrum-Heading3">Links over backgrounds</h3>\n<p class="spectrum-Body3">When a link needs to be placed on top of a colored background or a visual, use the over background link. This link uses a white opaque color instead of a blue color and stands out from the rest of the text with the addition of an underline.</p>\n<code-example class="language-html">&lt;div\n    style=&quot;background-color: rgb(255, 160, 175); padding: 15px 20px; display: inline-block;&quot;\n&gt;\n    &lt;p style=&quot;color: rgb(240, 240, 240);&quot;&gt;\n        This\n        &lt;sp-link over-background href=&quot;#&quot;&gt;link&lt;/sp-link&gt;\n        is over a background.\n    &lt;/p&gt;\n&lt;/div&gt;</code-example>\n<h3 id="download-attribute" class="spectrum-Heading3">Download attribute</h3>\n<p class="spectrum-Body3">The download attribute on an <code>html&lt;a&gt;</code> tag prompts a user to download a link as opposed to navigating to it. This attribute has\nsimply been carried forward to <code>html&lt;sp-link&gt;</code> to function the same.</p>\n<p class="spectrum-Body3">While it functions this way without assigning a value, actually assigning the value allows custom naming of the download link in accordance\nwith normal <code>html&lt;a&gt;</code> <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a" class="spectrum-Link">rules</a> defined by the browser.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">This is a &lt;sp-link download=&quot;myfile.txt&quot; href=&quot;#&quot;&gt;download link&lt;/sp-link&gt;.</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">Links are accessible by default, rendered in HTML using the <code>&lt;a&gt;</code> element. The correct aria roles will automatically be applied.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-menu /&gt;</code> is used for creating a menu list. The various elements inside a menu are given as <code>&lt;sp-menu-group/&gt;</code>, <code>&lt;sp-menu-item /&gt;</code>, or <code>&lt;sp-menu-divider /&gt;</code>.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/menu-group\n\n# or\n\nyarn add @spectrum-web-components/menu-group</code-example><h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="organization" class="spectrum-Heading3">Organization</h3>\n<p class="spectrum-Body3">The content of a menu can be organized by either adding <code>&lt;sp-menu-divider /&gt;</code> elements to a flat list, or by labeling groups of items in a longer list with a <code>&lt;sp-menu-group /&gt;</code> element which provides a slot for a group header; <code>[slot=&quot;header&quot;]</code>.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-popover open style=&quot;position: relative&quot;&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-group&gt;\n            &lt;span slot=&quot;header&quot;&gt;New York&lt;/span&gt;\n            &lt;sp-menu-item&gt;\n                Central Park\n            &lt;/sp-menu-item&gt;\n            &lt;sp-menu-item&gt;\n                Prospect Park\n            &lt;/sp-menu-item&gt;\n        &lt;/sp-menu-group&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-group&gt;\n            &lt;span slot=&quot;header&quot;&gt;San Fransisco&lt;/span&gt;\n            &lt;sp-menu-item&gt;\n                Golden Gate Park\n            &lt;/sp-menu-item&gt;\n            &lt;sp-menu-item&gt;\n                Lake Merced Park\n            &lt;/sp-menu-item&gt;\n        &lt;/sp-menu-group&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-popover&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3"><code>&lt;sp-menu /&gt;</code>, <code>&lt;sp-menu-group /&gt;</code>, and <code>&lt;sp-menu-item /&gt;</code> each deliver a different part of the wai-aria &quot;menu&quot; pattern and support the <code>menu</code>, <code>group</code>, and <code>menuitem</code> roles respectively. To support ease of keyboard navigation, only the first active <em>or</em> first selected <code>&lt;sp-menu-item /&gt;</code> can be accessed in the tab order. Once the focus has entered the menu the up and down arrow keys can be used to access the rest of the menu.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-menu /&gt;</code> is used for creating a menu list. The various elements inside a menu are given as <code>&lt;sp-menu-group/&gt;</code>, <code>&lt;sp-menu-item /&gt;</code>, or <code>&lt;sp-menu-divider /&gt;</code>.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/menu-item\n\n# or\n\nyarn add @spectrum-web-components/menu-item</code-example><h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="menu-items" class="spectrum-Heading3">Menu items</h3>\n<p class="spectrum-Body3">Menus are a collection of <code>&lt;sp-menu-items /&gt;</code> that can be modified to be <code>disabled</code> or <code>selected</code>.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-menu&gt;\n    &lt;sp-menu-item&gt;\n        Active menu item\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item disabled&gt;\n        Disabled menu item\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item selected&gt;\n        Selected menu item\n    &lt;/sp-menu-item&gt;\n&lt;/sp-menu&gt;</code-example>\n<h3 id="organization" class="spectrum-Heading3">Organization</h3>\n<p class="spectrum-Body3">The content of a menu can be organized by either adding <code>&lt;sp-menu-divider /&gt;</code> elements to a flat list.</p>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-popover open style=&quot;position: relative&quot;&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Menu item 1a\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Menu item 2a\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Menu item 3a\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Menu item 1b\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-divider&gt;&lt;/sp-menu-divider&gt;\n        &lt;sp-menu-item&gt;\n            Menu item 2b\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-popover&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3"><code>&lt;sp-menu /&gt;</code>, <code>&lt;sp-menu-group /&gt;</code>, and <code>&lt;sp-menu-item /&gt;</code> each deliver a different part of the wai-aria &quot;menu&quot; pattern and support the <code>menu</code>, <code>group</code>, and <code>menuitem</code> roles respectively. To support ease of keyboard navigation, only the first active <em>or</em> first selected <code>&lt;sp-menu-item /&gt;</code> can be accessed in the tab order. Once the focus has entered the menu the up and down arrow keys can be used to access the rest of the menu.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-menu /&gt;</code> is used for creating a menu list. The various elements inside a menu are given as <code>&lt;sp-menu-group/&gt;</code>, <code>&lt;sp-menu-item /&gt;</code>, or <code>&lt;sp-menu-divider /&gt;</code>. Often a <code>&lt;sp-menu /&gt;</code> element will appear in a <code>&lt;sp-popover /&gt;</code> element so that it displays as a togglig menu.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/menu\n\n# or\n\nyarn add @spectrum-web-components/menu</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n\x3c!-- prettier-ignore --\x3e\n<code-example class="language-html">&lt;sp-menu&gt;\n    &lt;sp-menu-item&gt;\n        Deselect\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item&gt;\n        Select inverse\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item&gt;\n        Feather...\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item&gt;\n        Select and mask...\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item&gt;\n        Save selection\n    &lt;/sp-menu-item&gt;\n    &lt;sp-menu-item disabled&gt;\n        Make work path\n    &lt;/sp-menu-item&gt;\n&lt;/sp-menu&gt;</code-example>\n<code-example class="language-html">&lt;sp-popover open style=&quot;position: relative&quot;&gt;\n    &lt;sp-menu&gt;\n        &lt;sp-menu-item&gt;\n            Deselect\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select inverse\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Feather...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Select and mask...\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item&gt;\n            Save selection\n        &lt;/sp-menu-item&gt;\n        &lt;sp-menu-item disabled&gt;\n            Make work path\n        &lt;/sp-menu-item&gt;\n    &lt;/sp-menu&gt;\n&lt;/sp-popover&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3"><code>&lt;sp-menu /&gt;</code>, <code>&lt;sp-menu-group /&gt;</code>, and <code>&lt;sp-menu-item /&gt;</code> each deliver a different part of the wai-aria &quot;menu&quot; pattern and support the <code>menu</code>, <code>group</code>, and <code>menuitem</code> roles respectively. To support ease of keyboard navigation, only the first active <em>or</em> first selected <code>&lt;sp-menu-item /&gt;</code> can be accessed in the tab order. Once the focus has entered the menu the up and down arrow keys can be used to access the rest of the menu.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">To ensure that content the requires it (modals, menus, etc) can escape overflow rules, the z-index, et al, Spectrum Web Components provides an overlay system that is made up of three interrelated elements, <code>&lt;overlay-trigger&gt;</code>, <code>&lt;active-overlay&gt;</code>, and <code>&lt;sp-theme&gt;</code>. DOM that should be overlaid on <em>hover</em> (<code>[slot=&quot;hover-content&quot;]</code>) and <em>click</em> (<code>[slot=&quot;click-content&quot;]</code>) are outlined in the light DOM content of an <code>&lt;overlay-trigger&gt;</code>. Said content will be overlayed onto the DOM via an <code>&lt;active-overlay&gt;</code> element that will be appended to the <code>&lt;body&gt;</code>. Content delivered in this way will acquire CSS Custom Properties for <code>color</code> and <code>size</code> from the trigger&#39;s nearest ancestor <code>&lt;sp-theme&gt;</code>.</p>\n<p class="spectrum-Body3">Note: Cascading styles not applied via <code>&lt;sp-theme&gt;</code> are not currently projected along with the overlay content. To ensure that any additionoal styles for the overlaid content are applied, use the <code>style</code> attribute directly or encapsulate this content in a custom element that applies its styles via shadow DOM.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/overlay\n\n# or\n\nyarn add @spectrum-web-components/overlay</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;style&gt;\n    overlay-trigger {\n        flex: none;\n    }\n\n    .tooltip {\n        background-color: var(--spectrum-global-color-gray-800);\n        color: var(--spectrum-global-color-gray-50);\n        padding: 4px 10px;\n        font-size: 10px;\n    }\n&lt;/style&gt;\n&lt;overlay-trigger id=&quot;trigger&quot; placement=&quot;bottom&quot; offset=&quot;6&quot;&gt;\n    &lt;sp-button variant=&quot;primary&quot; slot=&quot;trigger&quot;&gt;\n        Bottopopover\n    &lt;/sp-button&gt;\n    &lt;sp-popover dialog slot=&quot;click-content&quot; direction=&quot;bottom&quot; tip open&gt;\n        &lt;div class=&quot;options-popover-content&quot;&gt;\n            &lt;sp-slider\n                value=&quot;5&quot;\n                step=&quot;0.5&quot;\n                min=&quot;0&quot;\n                max=&quot;20&quot;\n                label=&quot;Awesomeness&quot;\n            &gt;&lt;/sp-slider&gt;\n            &lt;sp-button&gt;Press me&lt;/sp-button&gt;\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n    &lt;sp-tooltip slot=&quot;hover-content&quot; delayed open&gt;\n        Tooltip\n    &lt;/sp-tooltip&gt;\n&lt;/overlay-trigger&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-popover</strong> is used to display transient content (menus, options, additional actions etc.) and appears when clicking/tapping on a source (tools, buttons, etc.) It stands out via its visual style (stroke and drop shadow) and floats on top of the rest of the interface. This component does not implement the actual overlay behavior and interactions. This is handled in the <code>Overlay Root</code> and <code>Overlay Trigger</code>.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/popover\n\n# or\n\nyarn add @spectrum-web-components/popover</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); position: relative; width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;dialog&quot; open&gt;\n        &lt;div style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;&gt;\n            Popover title\n        &lt;/div&gt;\n        &lt;div style=&quot;font-size: 14px&quot;&gt;\n            Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly caramels.\n            Icing soufflé chupa chups donut cheesecake. Jelly-o chocolate cake\n            sweet roll cake danish candy biscuit halvah\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="default-with-no-tip" class="spectrum-Heading3">Default with no tip</h3>\n<p class="spectrum-Body3">Default popover with no tip and no placement. Popovers will fill up the space of they&#39;re containing\nelement by default. The default popover has no padding by default</p>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;default&quot; open style=&quot;max-width: 320px&quot;&gt;\n        &lt;div style=&quot;font-size: 14px; padding: 10px&quot;&gt;\n            &lt;div\n                style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;\n            &gt;\n                Popover title\n            &lt;/div&gt;\n            &lt;div style=&quot;font-size: 14px&quot;&gt;\n                Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly\n                caramels. Icing soufflé chupa chups donut cheesecake. Jelly-o\n                chocolate cake sweet roll cake danish candy biscuit halvah\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n<h3 id="dialog-popovers" class="spectrum-Heading3">Dialog popovers</h3>\n<p class="spectrum-Body3">Popovers with padding, ideal for dialogs.</p>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); position: relative; width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;dialog&quot; open&gt;\n        &lt;div style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;&gt;\n            Popover title\n        &lt;/div&gt;\n        &lt;div style=&quot;font-size: 14px&quot;&gt;\n            Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly caramels.\n            Icing soufflé chupa chups donut cheesecake. Jelly-o chocolate cake\n            sweet roll cake danish candy biscuit halvah\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n<h3 id="popover-with-tip" class="spectrum-Heading3">Popover with tip</h3>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); position: relative; width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;dialog&quot; placement=&quot;bottom&quot; tip open&gt;\n        &lt;div style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;&gt;\n            Popover title\n        &lt;/div&gt;\n        &lt;div style=&quot;font-size: 14px&quot;&gt;\n            Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly caramels.\n            Icing soufflé chupa chups donut cheesecake. Jelly-o chocolate cake\n            sweet roll cake danish candy biscuit halvah\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); position: relative; width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;dialog&quot; placement=&quot;top&quot; tip open&gt;\n        &lt;div style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;&gt;\n            Popover title\n        &lt;/div&gt;\n        &lt;div style=&quot;font-size: 14px&quot;&gt;\n            Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly caramels.\n            Icing soufflé chupa chups donut cheesecake. Jelly-o chocolate cake\n            sweet roll cake danish candy biscuit halvah\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); position: relative; width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;dialog&quot; placement=&quot;left&quot; tip open&gt;\n        &lt;div style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;&gt;\n            Popover title\n        &lt;/div&gt;\n        &lt;div style=&quot;font-size: 14px&quot;&gt;\n            Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly caramels.\n            Icing soufflé chupa chups donut cheesecake. Jelly-o chocolate cake\n            sweet roll cake danish candy biscuit halvah\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n<code-example class="language-html">&lt;div\n    style=&quot;color: var(--spectrum-global-color-gray-800); position: relative; width: 320px; height: 200px&quot;\n&gt;\n    &lt;sp-popover variant=&quot;dialog&quot; placement=&quot;right&quot; tip open&gt;\n        &lt;div style=&quot;padding-bottom: 30px; font-size: 18px; font-weight: 700&quot;&gt;\n            Popover title\n        &lt;/div&gt;\n        &lt;div style=&quot;font-size: 14px&quot;&gt;\n            Cupcake ipsum dolor sit amet jelly beans. Chocolate jelly caramels.\n            Icing soufflé chupa chups donut cheesecake. Jelly-o chocolate cake\n            sweet roll cake danish candy biscuit halvah\n        &lt;/div&gt;\n    &lt;/sp-popover&gt;\n&lt;/div&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><strong>sp-radio</strong> and <strong>sp-radio-group</strong> allow users to select a single option from a list of mutually exclusive options. All possible options are exposed up front for users to compare.</p>\n<p class="spectrum-Body3"><strong>sp-radio-group</strong> holds a list of <strong>sp-radio</strong> elements, and is responsible for deselecting radio buttons when a new one is selected, which in turn makes it responsible for keeping track of which one is selected. <strong>sp-radio</strong> is responsible for handling user interactions and for visually reflecting if it is the one that is checked or not.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/radio-group\n\n# or\n\nyarn add @spectrum-web-components/radio-group</code-example><h3 id="example" class="spectrum-Heading3">Example</h3>\n<code-example class="language-html">&lt;sp-radio-group selected=&quot;first&quot; name=&quot;example&quot;&gt;\n    &lt;sp-radio value=&quot;first&quot;&gt;Option 1&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;second&quot;&gt;Option 2&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;third&quot;&gt;Option 3&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;fourth&quot;&gt;Option 4&lt;/sp-radio&gt;\n&lt;/sp-radio-group&gt;</code-example>\n<h3 id="radio-group-column" class="spectrum-Heading3">Radio group column</h3>\n<p class="spectrum-Body3">By default, radio groups are inline and appear vertically. By adding the <code>column</code> property to <strong>sp-radio-group</strong>\nthe radio buttons will be listed vertically on their own line.</p>\n<code-example class="language-html">&lt;sp-radio-group column name=&quot;column-example&quot;&gt;\n    &lt;sp-radio value=&quot;first&quot;&gt;Option 1&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;second&quot;&gt;Option 2&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;third&quot;&gt;Option 3&lt;/sp-radio&gt;\n&lt;/sp-radio-group&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">Radio buttons are accessible by default, rendered in HTML using the <code>&lt;input type=&quot;radio&quot;&gt;</code> element. Tabbing into a group of radio buttons places the focus on the first radio button selected. If none of the radio buttons are selected, the focus is set on the first one in the group. Space selects the radio button in focus (if not already selected). Using the arrow keys moves focus and selection to the previous or next radio button in the group (last becomes first, and first becomes last). The new radio button in focus gets selected even if the previous one was not.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><strong>sp-radio</strong> and <strong>sp-radio-group</strong> allow users to select a single option from a list of mutually exclusive options. All possible options are exposed up front for users to compare.</p>\n<p class="spectrum-Body3"><strong>sp-radio-group</strong> holds a list of <strong>sp-radio</strong> elements, and is responsible for deselecting radio buttons when a new one is selected, which in turn makes it responsible for keeping track of which one is selected. <strong>sp-radio</strong> is responsible for handling user interactions and for visually reflecting if it is the one that is checked or not.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/radio\n\n# or\n\nyarn add @spectrum-web-components/radio</code-example><h3 id="example" class="spectrum-Heading3">Example</h3>\n<code-example class="language-html">&lt;sp-radio-group selected=&quot;first&quot; name=&quot;example&quot;&gt;\n    &lt;sp-radio value=&quot;first&quot;&gt;Option 1&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;second&quot;&gt;Option 2&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;third&quot;&gt;Option 3&lt;/sp-radio&gt;\n    &lt;sp-radio value=&quot;fourth&quot;&gt;Option 4&lt;/sp-radio&gt;\n&lt;/sp-radio-group&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="standard-radio" class="spectrum-Heading3">Standard radio</h3>\n<p class="spectrum-Body3">Standard radio buttons are the default style for radio buttons. The blue color provides a visual prominence that is optimal for forms, settings, etc. where the radio buttons need to be noticed.</p>\n<code-example class="language-html">&lt;sp-radio&gt;Standard radio button&lt;/sp-radio&gt;</code-example>\n<h3 id="quiet-radio" class="spectrum-Heading3">Quiet radio</h3>\n<p class="spectrum-Body3">Quiet radio buttons are a secondary style for radio buttons. The gray color provides a\nless prominent style than the standard radioes. They are optimal for\napplication panels where all visual elements are monochrome in order to direct\nfocus to the content.</p>\n<code-example class="language-html">&lt;sp-radio quiet&gt;Quiet radio button&lt;/sp-radio&gt;</code-example>\n<h2 id="states" class="spectrum-Heading2--quiet">States</h2>\n<p class="spectrum-Body3">In addition to the variant, <strong>sp-radio</strong> buttons have a number of attributes for\ncontrolling their visual state. All radio variants support the <code>disabled</code> and <code>invalid</code> attributes. Invalid which applies a disabled style to the\nradio, and also prevents clicks from activating it.</p>\n<h3 id="checked" class="spectrum-Heading3">Checked</h3>\n<p class="spectrum-Body3">When the radio is selected. Can be deselected only by selecting another radio in the group or by manually setting checked property</p>\n<code-example class="language-html">&lt;sp-radio checked&gt;Checked radio button&lt;/sp-radio&gt;</code-example>\n<h3 id="invalid" class="spectrum-Heading3">Invalid</h3>\n<p class="spectrum-Body3">Indicates some error state related to the radio button. Can still be checked.</p>\n<code-example class="language-html">&lt;sp-radio invalid&gt;Invalid radio button&lt;/sp-radio&gt;</code-example>\n<h3 id="disabled" class="spectrum-Heading3">Disabled</h3>\n<p class="spectrum-Body3">When the radio button is no longer interactable. The button cannot be checked.</p>\n<code-example class="language-html">&lt;sp-radio disabled&gt;Disabled radio button&lt;/sp-radio&gt;</code-example>\n<h3 id="handling-events" class="spectrum-Heading3">Handling events</h3>\n<p class="spectrum-Body3">Event handlers for clicks and other user actions can be registered on an <code>sp-radio</code> just as a normal <code>&lt;input type=&quot;radio&quot;&gt;</code> element.</p>\n<code-example class="language-html">&lt;sp-radio id=&quot;radio-example&quot; onclick=&quot;javascript:alert(&#39;Click&#39;)&quot;&gt;\n    Web component\n&lt;/sp-radio&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">Radio buttons are accessible by default, rendered in HTML using the <code>&lt;input type=&quot;radio&quot;&gt;</code> element. Tabbing into a group of radio buttons places the focus on the first radio button selected. If none of the radio buttons are selected, the focus is set on the first one in the group. Space selects the radio button in focus (if not already selected). Using the arrow keys moves focus and selection to the previous or next radio button in the group (last becomes first, and first becomes last). The new radio button in focus gets selected even if the previous one was not.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">The <code>&lt;sp-search /&gt;</code> element delivers a single input field with a &quot;reset&quot; button as well as a mangifying glass icon with which to power search interactions.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/search\n\n# or\n\nyarn add @spectrum-web-components/search</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-search&gt;&lt;/sp-search&gt;\n&lt;sp-search disabled&gt;&lt;/sp-search&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="quiet" class="spectrum-Heading3">Quiet</h3>\n<code-example class="language-html">&lt;sp-search quiet&gt;&lt;/sp-search&gt;\n&lt;sp-search quiet disabled&gt;&lt;/sp-search&gt;</code-example>\n<h2 id="events" class="spectrum-Heading2--quiet">Events</h2>\n<p class="spectrum-Body3">The <code>submit</code> event fires when the <code>&lt;sp-search /&gt;</code> is submitted. This is a non-<code>composed</code> event inline with what you would expect a <a href="https://developer.mozilla.org/en-US/docs/Web/API/HTMLFormElement/submit_event" class="spectrum-Link"><code>&lt;form /&gt;</code></a>{:target=&quot;_blank&quot;} to fire. If you choose to prevent the default of this event, the default action for the underlying <code>&lt;form /&gt;</code> element will also be prevented, which will allow you to handle the search action in javascript.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">Shared mixins, tools, etc. that support developing Spectrum Web Components.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/shared\n\n# or\n\nyarn add @spectrum-web-components/shared</code-example><h3 id="focusable" class="spectrum-Heading3">Focusable</h3>\n<p class="spectrum-Body3">The <code>Focusable</code> subclass of <code>LitElement</code> adds some helpers method and lifecycle coverage in order to support passing focus to a container element inside of a custom element. The Focusable base class handles tabindex setting into shadowed elements automatically and is based heavily on the aybolit delegate-focus-mixin at <a href="https://github.com/web-padawan/aybolit/blob/master/packages/core/src/mixins/delegate-focus-mixin.js" class="spectrum-Link">https://github.com/web-padawan/aybolit/blob/master/packages/core/src/mixins/delegate-focus-mixin.js</a></p>\n<code-example class="language-js">import { Focusable } from &#39;@spectrum-web-components/shared/lib/focusable&#39;;\nimport { html } from &#39;lit-element&#39;;\n\nclass FocusableButton extends Focusable {\n    public static get styles(): CSSResultArray {\n        return [...super.styles];\n    }\n    public get focusElement(): HTMLElement {\n        /* istanbul ignore if */\n        if (!this.shadowRoot) {\n            return this;\n        }\n        return this.shadowRoot.querySelector(&#39;#button&#39;) as HTMLElement;\n    }\n\n    protected render(): TemplateResult {\n        return html`\n            &lt;button\n                id=&quot;button&quot;\n            &gt;\n                Focus for this button is being managed by the focusable base class.\n            &lt;/button&gt;\n        `;\n    }\n}</code-example>\n<h3 id="observerslottext" class="spectrum-Heading3">ObserverSlotText</h3>\n<p class="spectrum-Body3">When working with <code>&lt;slot&gt;</code>s and their <code>slotchange</code> event, you will have the opportunity to capture when the nodes and/or elements in your element are added or removed. However, if the <code>textContent</code> of a text node changes, you will not receive the <code>slotchange</code> event because the slot hasn&#39;t actually received new nodes and/or elements in the exchange. When working with a lit-html binding <code>&lt;your-element&gt;${text}&lt;/your-element&gt;</code> that means you will not receive a <code>slotchange</code> event when the value of <code>text</code> goes from <code>text = &#39;&#39;</code> to <code>text = &#39;something&#39;</code> or the other way. In these cases the <code>ObserveSlotText</code> can be leverages to apply a mutation observe onto your element that tracks <code>characterData</code> mutations so that you can resspond as desired.</p>\n<code-example class="language-js">import { ObserveSlotText } from &#39;@spectrum-web-components/shared/lib/oberve-slot-text&#39;;\nimport { LitElement, html } from &#39;lit-element&#39;;\n\nclass ObserveSlotTextElement extends ObserveSlotText(LitElement, &#39;#observing-slot&#39;) {\n    protected render(): TemplateResult {\n        return html`\n            &lt;button\n                id=&quot;button&quot;\n            &gt;\n                &lt;slot\n                    id=&quot;observing-slot&quot;\n                    @slotchange=${this.manageObservedSlot}\n                &gt;&lt;/slot&gt;\n            &lt;/button&gt;\n        `;\n    }\n    protected updated(): void {\n        console.log(this.slotHasContent); // =&gt; true when &lt;observing-slot-text-element&gt;Text&lt;/observing-slot-text-element&gt;\n    }\n}\n\ncustomElements.define(&#39;observing-slot-text-element&#39;, ObserveSlotTextElement);</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">Side navigation allows users to locate information and features within the UI.\nIt can be used for either hierarchical or flat navigation, and gives the ability\nto group navigable items categorically. Side navigation is an opportunity to\nprioritize content or features based on your users’ needs in a way that\nmaintains clear, persistent visibility. Use side navigation within the context\nof larger elements and mechanisms within the app frame.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/sidenav\n\n# or\n\nyarn add @spectrum-web-components/sidenav</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-sidenav defaultValue=&quot;Docs&quot;&gt;\n    &lt;sp-sidenav-item\n        value=&quot;Docs&quot;\n        label=&quot;Docs&quot;\n        href=&quot;/components/SideNav&quot;\n    &gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item\n        value=&quot;Guides&quot;\n        label=&quot;Guides&quot;\n        href=&quot;/guides/getting_started&quot;\n    &gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item\n        value=&quot;Community&quot;\n        label=&quot;Community&quot;\n        href=&quot;/community&quot;\n    &gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item\n        value=&quot;Storybook&quot;\n        label=&quot;Storybook&quot;\n        href=&quot;/storybook&quot;\n        target=&quot;_blank&quot;\n    &gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item\n        value=&quot;Releases&quot;\n        label=&quot;Releases&quot;\n        href=&quot;http://git.corp.adobe.com/React/react-spectrum/releases&quot;\n        target=&quot;_blank&quot;\n        disabled\n    &gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item\n        value=&quot;GitHub&quot;\n        label=&quot;GitHub&quot;\n        href=&quot;http://git.corp.adobe.com/React/react-spectrum&quot;\n        target=&quot;_blank&quot;\n    &gt;&lt;/sp-sidenav-item&gt;\n&lt;/sp-sidenav&gt;</code-example>\n<h2 id="multi-level" class="spectrum-Heading2--quiet">Multi-level</h2>\n<p class="spectrum-Body3">Use this variation when you have multiple layers of hierarchical navigation. The\nheaders are styled differently and possess the same interactive behavior as a\ntreeview; clicking the header opens and collapses the children navigation items.\nIn the instances where a top-level navigation item has no children, clicking\nwill send the user to the location of the item.</p>\n<code-example class="language-html">&lt;sp-sidenav variant=&quot;multilevel&quot; defaultValue=&quot;Layout&quot;&gt;\n    &lt;sp-sidenav-item value=&quot;Guidelines&quot; label=&quot;Guidelines&quot;&gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item value=&quot;Styles&quot; label=&quot;Styles&quot;&gt;\n        &lt;sp-sidenav-item value=&quot;Color&quot; label=&quot;Color&quot;&gt;&lt;/sp-sidenav-item&gt;\n        &lt;sp-sidenav-item value=&quot;Grid&quot; label=&quot;Grid&quot;&gt;\n            &lt;sp-sidenav-item value=&quot;Layout&quot; label=&quot;Layout&quot;&gt;&lt;/sp-sidenav-item&gt;\n            &lt;sp-sidenav-item value=&quot;Responsive&quot; label=&quot;Responsive&quot;&gt;&lt;/sp-sidenav-item&gt;\n        &lt;/sp-sidenav-item&gt;\n        &lt;sp-sidenav-item value=&quot;Typography&quot; label=&quot;Typography&quot;&gt;&lt;/sp-sidenav-item&gt;\n    &lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item value=&quot;Elements&quot; label=&quot;Elements&quot;&gt;&lt;/sp-sidenav-item&gt;\n    &lt;sp-sidenav-item value=&quot;Patterns&quot; label=&quot;Patterns&quot;&gt;&lt;/sp-sidenav-item&gt;\n&lt;/sp-sidenav-itm&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">When the <code>manage-tab-index</code> attribute is set on an <code>sp-sidenav</code> element then it will presents its child <code>sp-sidenav-item</code> children with a single tab-stop. This will leave items beyond the selected item, or first when there is no focusable selected item, will be accessibile via the up and down arrow keys.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><strong>sp-slider</strong> allows users to quickly select a value within a range. They should be used when the upper and lower bounds to the range are invariable.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/slider\n\n# or\n\nyarn add @spectrum-web-components/slider</code-example><h3 id="example" class="spectrum-Heading3">Example</h3>\n<code-example class="language-html">&lt;sp-slider&gt;&lt;/sp-slider&gt;</code-example>\n<h3 id="variants" class="spectrum-Heading3">Variants</h3>\n<h4 id="filled">Filled</h4>\n<code-example class="language-html">&lt;sp-slider variant=&quot;filled&quot;&gt;&lt;/sp-slider&gt;</code-example>\n<h4 id="ramp">Ramp</h4>\n<code-example class="language-html">&lt;sp-slider variant=&quot;ramp&quot;&gt;&lt;/sp-slider&gt;</code-example>\n<h4 id="tick">Tick</h4>\n<code-example class="language-html">&lt;sp-slider variant=&quot;tick&quot; tick-step=&quot;4&quot;&gt;&lt;/sp-slider&gt;</code-example>\n<h4 id="tick-w-labels">Tick w/ labels</h4>\n<code-example class="language-html">&lt;sp-slider variant=&quot;tick&quot; tick-step=&quot;5&quot; tick-labels&gt;&lt;/sp-slider&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-status-light</strong> is a great way to convey semantic meaning, such as statuses and categories.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/status-light\n\n# or\n\nyarn add @spectrum-web-components/status-light</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-status-light variant=&quot;positive&quot;&gt;approved&lt;/sp-status-light&gt;</code-example>\n<h3 id="variants" class="spectrum-Heading3">Variants</h3>\n<p class="spectrum-Body3">There are many variants to choose from in Spectrum. The <code>variant</code>\nattribute controls the main variant of the status light, and <code>neutral</code> being the default. Following are the supported variants:</p>\n<ul class="spectrum-Body3">\n<li>positive</li>\n<li>negative</li>\n<li>notice</li>\n<li>info</li>\n<li>neutral</li>\n<li>yellow</li>\n<li>fuchsia</li>\n<li>indigo</li>\n<li>seafoam</li>\n<li>chartreuse</li>\n<li>magenta</li>\n<li>celery</li>\n<li>purple</li>\n</ul>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">Spectrum Web Components are a <a href="https://lit-element.polymer-project.org" class="spectrum-Link"><code>LitElement</code></a> powered web component library of patterns built ontop of the <a href="https://opensource.adobe.com/spectrum-css" class="spectrum-Link">Spectrum CSS</a> specification. Styles for these components are made available (and in some cases customizable) via CSS Custom Properties, e.g. <code>var(--spectrum-global-color-static-black)</code>. In this package you will find the various CSS Custom Properties that power the various color and size themese defined by Spectrum CSS.</p>\n<p class="spectrum-Body3">The easiest way to consume these values is via the <code>&lt;sp-theme&gt;</code> element, however in some case it can be useful to have direct access to the files outlining the CSS Custom Properties ontop of which the rest of the component system is built.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/styles\n\n# or\n\nyarn add @spectrum-web-components/styles</code-example><h2 id="theme-packages" class="spectrum-Heading2--quiet">Theme packages</h2>\n<code-example>@import &#39;@spectrum-web-components/styles/all-medium-darkest.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Darkest&quot; color set and &quot;Medium&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-medium-dark.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Dark&quot; color set and &quot;Medium&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-medium-light.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Light&quot; color set and &quot;Medium&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-medium-lightest.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Lightest&quot; color set and &quot;Medium&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-large-darkest.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Darkest&quot; color set and &quot;Large&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-large-dark.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Dark&quot; color set and &quot;Large&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-large-light.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Light&quot; color set and &quot;Large&quot; scale system specification.</p>\n<code-example>@import &#39;@spectrum-web-components/styles/all-large-lightest.css&#39;;</code-example><p class="spectrum-Body3">This file brings together the globals variables and font settings with the &quot;Lightest&quot; color set and &quot;Large&quot; scale system specification.</p>\n<h2 id="color-sets" class="spectrum-Heading2--quiet">Color sets</h2>\n<h3 id="darkest" class="spectrum-Heading3">Darkest</h3>\n<code-example>@import &#39;@spectrum-web-components/styles/theme-darkest.css&#39;;</code-example><p class="spectrum-Body3">This file provides only the variables needed to power a color pallet featuring colors found in the &quot;Darkest&quot; theme.</p>\n<h3 id="dark" class="spectrum-Heading3">Dark</h3>\n<code-example>@import &#39;@spectrum-web-components/styles/theme-dark.css&#39;;</code-example><p class="spectrum-Body3">This file provides only the variables needed to power a color pallet featuring colors found in the &quot;Dark&quot; theme.</p>\n<h3 id="light" class="spectrum-Heading3">Light</h3>\n<code-example>@import &#39;@spectrum-web-components/styles/theme-light.css&#39;;</code-example><p class="spectrum-Body3">This file provides only the variables needed to power a color pallet featuring colors found in the &quot;Light&quot; theme.</p>\n<h3 id="lightest" class="spectrum-Heading3">Lightest</h3>\n<code-example>@import &#39;@spectrum-web-components/styles/theme-lightest.css&#39;;</code-example><p class="spectrum-Body3">This file provides only the variables needed to power a color pallet featuring colors found in the &quot;Lightest&quot; theme.</p>\n<h2 id="scale" class="spectrum-Heading2--quiet">Scale</h2>\n<h3 id="medium" class="spectrum-Heading3">Medium</h3>\n<code-example>@import &#39;@spectrum-web-components/styles/scale-medium.css&#39;;</code-example><p class="spectrum-Body3">This file provides only the variables needed to power the &quot;Medium&quot; scale system specification.</p>\n<h3 id="large" class="spectrum-Heading3">Large</h3>\n<code-example>@import &#39;@spectrum-web-components/styles/scale-large.css&#39;;</code-example><p class="spectrum-Body3">This file provides only the variables needed to power the &quot;Large&quot; scale system specification.</p>\n<h2 id="typography" class="spectrum-Heading2--quiet">Typography</h2>\n<code-example>@import &#39;@spectrum-web-components/styles/typography.css&#39;;</code-example><p class="spectrum-Body3">This file provides a <code>lit-html</code> compliant version of the <a href="https://opensource.adobe.com/spectrum-css/components/typography/" class="spectrum-Link">Spectrum Typography classes</a>.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-switch</strong> is used to turn an option on or off. Switches allow users to select the state of a single option at a time. Use a switch rather than a checkbox when activating (or deactivating) an option, instead of selecting.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/switch\n\n# or\n\nyarn add @spectrum-web-components/switch</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-switch label=&quot;Switch&quot; onclick=&quot;javascript:alert(&#39;Click&#39;)&quot;&gt;Switch&lt;/sp-switch&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="standard-switches" class="spectrum-Heading3">Standard switches</h3>\n<p class="spectrum-Body3">Standard switches are the default style for switches. The blue color provides a\nvisual prominence that is optimal for forms, settings, etc. where the switches\nneed to be noticed.</p>\n<code-example class="language-html">&lt;sp-switch checked&gt;Web component&lt;/sp-switch&gt;</code-example>\n<h3 id="quiet-switches" class="spectrum-Heading3">Quiet switches</h3>\n<p class="spectrum-Body3">Quiet switches are a secondary style for switches. The gray color provides a\nless prominent style than the standard switches. They are optimal for\napplication panels where all visual elements are monochrome in order to direct\nfocus to the content.</p>\n<code-example class="language-html">&lt;sp-switch checked quiet&gt;Web component&lt;/sp-switch&gt;</code-example>\n<h2 id="state" class="spectrum-Heading2--quiet">State</h2>\n<h3 id="checked-controlled" class="spectrum-Heading3">Checked (controlled)</h3>\n<code-example class="language-html">&lt;sp-switch checked&gt;Checked true&lt;/sp-switch&gt;</code-example>\n<h3 id="disabled" class="spectrum-Heading3">Disabled</h3>\n<code-example class="language-html">&lt;sp-switch disabled&gt;Disabled switch&lt;/sp-switch&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">Switch are accessible by default, rendered in HTML using the <code>&lt;input type=&quot;checkbox&quot;&gt;</code> element with the appropriate accessibility role, <code>switch</code>. When the Switch is <code>checked</code> or <code>invalid</code>, the appropriate ARIA state attribute will automatically be applied.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">The <code>&lt;sp-tab-list&gt;</code> component contains set of tab-item elements. This is typically used as the interface for controlling a set of layered sections of content that display one panel of content at a time</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/tab-list\n\n# or\n\nyarn add @spectrum-web-components/tab-list</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-tab-list selected=&quot;1&quot;&gt;\n    &lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot; tabindex=&quot;1&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 2&quot; value=&quot;2&quot; tabindex=&quot;2&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 3&quot; value=&quot;3&quot; tabindex=&quot;3&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 4&quot; value=&quot;4&quot; tabindex=&quot;4&quot;&gt;&lt;/sp-tab&gt;\n&lt;/sp-tab-list&gt;</code-example>\n<h3 id="vertical" class="spectrum-Heading3">Vertical</h3>\n<code-example class="language-html">&lt;sp-tab-list selected=&quot;1&quot; direction=&quot;vertical&quot;&gt;\n    &lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot; tabindex=&quot;1&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 2&quot; value=&quot;2&quot; tabindex=&quot;2&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 3&quot; value=&quot;3&quot; tabindex=&quot;3&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 4&quot; value=&quot;4&quot; tabindex=&quot;4&quot;&gt;&lt;/sp-tab&gt;\n&lt;/sp-tab-list&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="quiet" class="spectrum-Heading3">Quiet</h3>\n<code-example class="language-html">&lt;sp-tab-list selected=&quot;1&quot; quiet&gt;\n    &lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot; tabindex=&quot;1&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 2&quot; value=&quot;2&quot; tabindex=&quot;2&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 3&quot; value=&quot;3&quot; tabindex=&quot;3&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 4&quot; value=&quot;4&quot; tabindex=&quot;4&quot;&gt;&lt;/sp-tab&gt;\n&lt;/sp-tab-list&gt;</code-example>\n<h3 id="compact" class="spectrum-Heading3">Compact</h3>\n<code-example class="language-html">&lt;sp-tab-list selected=&quot;1&quot; compact&gt;\n    &lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot; tabindex=&quot;1&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 2&quot; value=&quot;2&quot; tabindex=&quot;2&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 3&quot; value=&quot;3&quot; tabindex=&quot;3&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 4&quot; value=&quot;4&quot; tabindex=&quot;4&quot;&gt;&lt;/sp-tab&gt;\n&lt;/sp-tab-list&gt;</code-example>\n<h2 id="with-icons" class="spectrum-Heading2--quiet">With icons</h2>\n<code-example class="language-html">&lt;div&gt;\n    &lt;sp-icons-medium&gt;&lt;/sp-icons-medium&gt;\n    &lt;sp-tab-list selected=&quot;1&quot; direction=&quot;horizontal&quot;&gt;\n        &lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot; tabindex=&quot;1&quot;&gt;\n            &lt;sp-icon slot=&quot;icon&quot; size=&quot;m&quot; name=&quot;ui:CheckmarkSmall&quot;&gt;&lt;/sp-icon&gt;\n        &lt;/sp-tab&gt;\n        &lt;sp-tab label=&quot;Tab 2&quot; value=&quot;2&quot; tabindex=&quot;2&quot;&gt;\n            &lt;sp-icon slot=&quot;icon&quot; size=&quot;m&quot; name=&quot;ui:CrossSmall&quot;&gt;&lt;/sp-icon&gt;\n        &lt;/sp-tab&gt;\n        &lt;sp-tab label=&quot;Tab 3&quot; value=&quot;3&quot; tabindex=&quot;3&quot;&gt;\n            &lt;sp-icon slot=&quot;icon&quot; size=&quot;m&quot; name=&quot;ui:ChevronDownSmall&quot;&gt;&lt;/sp-icon&gt;\n        &lt;/sp-tab&gt;\n        &lt;sp-tab label=&quot;Tab 4&quot; value=&quot;4&quot; tabindex=&quot;4&quot;&gt;\n            &lt;sp-icon slot=&quot;icon&quot; size=&quot;m&quot; name=&quot;ui:HelpSmall&quot;&gt;&lt;/sp-icon&gt;\n        &lt;/sp-tab&gt;\n    &lt;/sp-tab-list&gt;\n&lt;/div&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">When an <code>&lt;sp-tab-list&gt;</code> has a <code>selected</code> value, the <code>&lt;sp-tab&gt;</code> child of that <code>value</code> will be given <code>[tabindex=&quot;0&quot;]</code> and will receive initial focus when tabbing into the <code>&lt;sp-tab-list&gt;</code> element. When no <code>selected</code> value is present, the first <code>&lt;sp-tab&gt;</code> child will be treated in this way. When focus is currently within the <code>&lt;sp-tab-list&gt;</code> element, the left and right arrows will move that focus back and forth through the available <code>&lt;sp-tab&gt;</code> children.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">The <code>&lt;sp-tab&gt;</code> component is intended to be the child of an <code>&lt;sp-tab-list&gt;</code> element and accepts both a <code>label</code> attribute and a <code>[slot=&quot;icon&quot;]</code> child to define its contents. Those contents can be further customized with the <code>vertical</code> attribute which stacks them in the UI rather than listing them in a row.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/tab\n\n# or\n\nyarn add @spectrum-web-components/tab</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-tab-list selected=&quot;1&quot;&gt;\n    &lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 2&quot; value=&quot;2&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 3&quot; value=&quot;3&quot;&gt;&lt;/sp-tab&gt;\n    &lt;sp-tab label=&quot;Tab 4&quot; value=&quot;4&quot;&gt;&lt;/sp-tab&gt;\n&lt;/sp-tab-list&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="icon" class="spectrum-Heading3">Icon</h3>\n<code-example class="language-html">&lt;sp-icons-medium&gt;&lt;/sp-icons-medium&gt;\n&lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot;&gt;\n    &lt;sp-icon slot=&quot;icon&quot; size=&quot;m&quot; name=&quot;ui:CheckmarkSmall&quot;&gt;&lt;/sp-icon&gt;\n&lt;/sp-tab&gt;</code-example>\n<h3 id="vertical-w-icon" class="spectrum-Heading3">Vertical w/ icon</h3>\n<code-example class="language-html">&lt;sp-tab label=&quot;Tab 1&quot; value=&quot;1&quot; vertical&gt;\n    &lt;sp-icon slot=&quot;icon&quot; size=&quot;m&quot; name=&quot;ui:CheckmarkSmall&quot;&gt;&lt;/sp-icon&gt;\n&lt;/sp-tab&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">By default, an <code>&lt;sp-tab&gt;</code> element has <code>[tabindex=&quot;-1&quot;]</code> so that it can be focused programmatically. When an <code>&lt;sp-tab&gt;</code> element is <code>[selected]</code> or isthe first <code>&lt;sp-tab&gt;</code> in an <code>&lt;sp-tab-list&gt;</code> element with no <code>selected</code> value, it will be given <code>[tabindex=&quot;0&quot;]</code>.</p>\n'},function(t,e){t.exports='<div class="spectrum-Article"><h1 class="spectrum-Heading1">@spectrum-css/tabs</h1></div>\n<blockquote>\n<p class="spectrum-Body3">The Spectrum CSS tabs component</p>\n</blockquote>\n<p class="spectrum-Body3">This package is part of the <a href="https://github.com/adobe/spectrum-css" class="spectrum-Link">Spectrum CSS project</a>.</p>\n<p class="spectrum-Body3">See the <a href="https://opensource.adobe.com/spectrum-css/" class="spectrum-Link">Spectrum CSS documentation</a> and <a href="https://github.com/adobe/spectrum-css" class="spectrum-Link">Spectrum CSS on GitHub</a> for details.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><code>sp-textfield</code> components are text boxes that allow users to input custom text entries with a keyboard. Various decorations can be displayed around the field to communicate the entry requirements.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/textfield\n\n# or\n\nyarn add @spectrum-web-components/textfield</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot;&gt;&lt;/sp-textfield&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="valid" class="spectrum-Heading3">Valid</h3>\n<p class="spectrum-Body3">Dictate the validity state of the text entry with the <code>valid</code> attribute.</p>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; valid&gt;&lt;/sp-textfield&gt;</code-example>\n<h3 id="invalid" class="spectrum-Heading3">Invalid</h3>\n<p class="spectrum-Body3">Dictate the invalidity state of the text entry with the <code>invalid</code> attribute.</p>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; invalid&gt;&lt;/sp-textfield&gt;</code-example>\n<h3 id="quiet" class="spectrum-Heading3">Quiet</h3>\n<p class="spectrum-Body3">The quiet style works best when a clear layout (vertical stack, table, grid) makes it easy to parse. Too many quiet components in a small space can be hard to read.</p>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; quiet&gt;&lt;/sp-textfield&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><code>sp-textfield[multiline]</code> components are text areas that allow users to input custom multiline text entries with a keyboard. Various decorations can be displayed around the field to communicate the entry requirements.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/textfield\n\n# or\n\nyarn add @spectrum-web-components/textfield</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; multiline&gt;&lt;/sp-textfield&gt;</code-example>\n<h2 id="variants" class="spectrum-Heading2--quiet">Variants</h2>\n<h3 id="valid" class="spectrum-Heading3">Valid</h3>\n<p class="spectrum-Body3">Dictate the validity state of the text entry with the <code>valid</code> attribute.</p>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; valid multiline&gt;&lt;/sp-textfield&gt;</code-example>\n<h3 id="invalid" class="spectrum-Heading3">Invalid</h3>\n<p class="spectrum-Body3">Dictate the invalidity state of the text entry with the <code>invalid</code> attribute.</p>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; invalid multiline&gt;&lt;/sp-textfield&gt;</code-example>\n<h3 id="quiet" class="spectrum-Heading3">Quiet</h3>\n<p class="spectrum-Body3">The quiet style works best when a clear layout (vertical stack, table, grid) makes it easy to parse. Too many quiet components in a small space can be hard to read.</p>\n<code-example class="language-html">&lt;sp-textfield placeholder=&quot;Enter your name&quot; quiet multiline&gt;&lt;/sp-textfield&gt;</code-example>\n<h3 id="grows" class="spectrum-Heading3">Grows</h3>\n<p class="spectrum-Body3">By default the text area has a fixed height and will scroll when text entry goes beyond the available space. With the use of the <code>grows</code> attribute the text area will grow to accomidate the full content of the element.</p>\n<code-example class="language-html">&lt;sp-textfield\n    multiline\n    placeholder=&quot;Enter your name&quot;\n    value=&quot;By default the text area has a fixed height and will scroll when text entry goes beyond the available space. With the use of the `grows` attribute the text area will grow to accomidate the full content of the element.&quot;\n&gt;&lt;/sp-textfield&gt;\n&lt;sp-textfield\n    multiline\n    grows\n    placeholder=&quot;Enter your name&quot;\n    value=&quot;By default the text area has a fixed height and will scroll when text entry goes beyond the available space. With the use of the `grows` attribute the text area will grow to accomidate the full content of the element.&quot;\n&gt;&lt;/sp-textfield&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3">An <strong>sp-theme</strong> sets the rendering theme for all child components.\nThe Spectrum design system supports four color themes and two different\nscales. <code>spectrum-web-components</code> currently supports three of the four\ncolor themes (dark, light and lightest) and one one of the scales (medium).</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/theme\n\n# or\n\nyarn add @spectrum-web-components/theme</code-example><h2 id="quick-start" class="spectrum-Heading2--quiet">Quick start</h2>\n<p class="spectrum-Body3">The default import of this packages <code>import &#39;@spectrum-web-components/themes&#39;;</code> will get you started using the <code>&lt;sp-theme&gt;</code> wrapper element, and includes all four (4) color options (<code>lightest</code>, <code>light</code>, <code>dark</code>, and <code>darkest</code>) and both (2) scale options (<code>medium</code> and <code>large</code>). Having all of these options available together is the easiest way to get a handle on the theming possibilities offered by the package and empower you to prototype and test various deliveries of your application. However, reserving the download and parse time for all of the variants may not be required for all applications. See &quot;Advanced usage&quot; below for instructions on tuning the performance of an application that leverages this package.</p>\n<h2 id="advanced-usage" class="spectrum-Heading2--quiet">Advanced usage</h2>\n<p class="spectrum-Body3">Once you&#39;ve moved beyond the prototype phases of an application, it is likely that you will only use one combinatin of <code>color</code> and <code>scale</code> in your application, and even when you don&#39;t you will likely benefit from lazily loading variants that you don&#39;t leverage by default. For single combination applications or to power a <em>default</em> theme, the following imports can be used to ensure only the code your application requires is loaded:</p>\n<code-example class="language-js">// Power a site using &lt;sp-theme color=&quot;darkest&quot; scale=&quot;large&quot;&gt;\nimport &#39;@spectrum-web-components/theme/lib/theme-darkest.js&#39;;\nimport &#39;@spectrum-web-components/theme/lib/scale-large.js&#39;;\n\nimport &#39;@spectrum-web-components/theme/lib/theme.js&#39;;</code-example>\n<p class="spectrum-Body3">When subsequent theme variants are needed you can ensure those are lazily loaded by leveraging dynamic imports via something like the following:</p>\n<code-example class="language-js">const themeElement = document.querySelector(&#39;sp-theme&#39;);\n\nconst updateTheme = async (color, scale) =&gt; {\n    Promise.all([\n        import(`@spectrum-web-components/theme/lib/theme-${color}.js`),\n        import(`@spectrum-web-components/theme/lib/scale-${scale}.js`),\n    ]).then(() =&gt; {\n        themeElement.color = color;\n        themeElement.scale = scale;\n    });\n};\n\nupdateTheme(&#39;light&#39;, &#39;medium&#39;);</code-example>\n<p class="spectrum-Body3">When bundling your application, be sure to consult the documentation of your bundler for the correct way to ensure proper packaging of the sort of programattic dependancy graph that this will create.</p>\n<h2 id="light-theme" class="spectrum-Heading2--quiet">Light theme</h2>\n<code-example class="language-html">&lt;style type=&quot;text/css&quot;&gt;\n    #example {\n        width: 500px;\n        padding: 3em;\n        background-color: var(--spectrum-global-color-gray-100);\n        color: var(--spectrum-global-color-gray-800);\n    }\n\n    #buttons {\n        margin-top: 2em;\n    }\n&lt;/style&gt;\n&lt;sp-theme color=&quot;light&quot;&gt;\n    &lt;div id=&quot;example&quot;&gt;\n        &lt;div&gt;\n            &lt;sp-slider\n                value=&quot;5&quot;\n                step=&quot;1&quot;\n                min=&quot;1&quot;\n                max=&quot;11&quot;\n                label=&quot;Volume&quot;\n                id=&quot;volume-slider&quot;\n            &gt;&lt;/sp-slider&gt;\n        &lt;/div&gt;\n        &lt;div&gt;&lt;sp-switch&gt;Overdrive&lt;/sp-switch&gt;&lt;/div&gt;\n        &lt;div id=&quot;buttons&quot;&gt;\n            &lt;sp-button variant=&quot;primary&quot;&gt;Cancel&lt;/sp-button&gt;\n            &lt;sp-button variant=&quot;cta&quot;&gt;Continue&lt;/sp-button&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/sp-theme&gt;</code-example>\n<h2 id="dark-theme" class="spectrum-Heading2--quiet">Dark theme</h2>\n<code-example class="language-html">&lt;style type=&quot;text/css&quot;&gt;\n    #example {\n        width: 500px;\n        padding: 3em;\n        background-color: var(--spectrum-global-color-gray-100);\n        color: var(--spectrum-global-color-gray-800);\n    }\n\n    #buttons {\n        margin-top: 2em;\n    }\n&lt;/style&gt;\n&lt;sp-theme color=&quot;dark&quot;&gt;\n    &lt;div id=&quot;example&quot;&gt;\n        &lt;div&gt;\n            &lt;sp-slider\n                value=&quot;5&quot;\n                step=&quot;1&quot;\n                min=&quot;1&quot;\n                max=&quot;11&quot;\n                label=&quot;Volume&quot;\n                id=&quot;volume-slider&quot;\n            &gt;&lt;/sp-slider&gt;\n        &lt;/div&gt;\n        &lt;div&gt;&lt;sp-switch&gt;Overdrive&lt;/sp-switch&gt;&lt;/div&gt;\n        &lt;div id=&quot;buttons&quot;&gt;\n            &lt;sp-button variant=&quot;primary&quot;&gt;Cancel&lt;/sp-button&gt;\n            &lt;sp-button variant=&quot;cta&quot;&gt;Continue&lt;/sp-button&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/sp-theme&gt;</code-example>\n<h2 id="embedding-themes" class="spectrum-Heading2--quiet">Embedding themes</h2>\n<p class="spectrum-Body3">There are a few cases where it is necessary to embed one theme within another.\nFor example, if you have an application that is using a dark theme that is\npreviewing or editing content that will be displayed in a light theme.</p>\n<code-example class="language-html">&lt;style type=&quot;text/css&quot;&gt;\n    #outer {\n        width: 500px;\n        padding: 3em;\n        background-color: var(--spectrum-global-color-gray-100);\n        color: var(--spectrum-global-color-gray-800);\n    }\n\n    #inner {\n        margin-top: 2em;\n        padding: 2em;\n        background-color: var(--spectrum-global-color-gray-100);\n        color: var(--spectrum-global-color-gray-800);\n    }\n\n    #buttons {\n        margin-top: 2em;\n    }\n&lt;/style&gt;\n&lt;sp-theme color=&quot;dark&quot;&gt;\n    &lt;div id=&quot;outer&quot;&gt;\n        &lt;div&gt;\n            &lt;sp-slider\n                value=&quot;5&quot;\n                step=&quot;1&quot;\n                min=&quot;1&quot;\n                max=&quot;11&quot;\n                label=&quot;Volume&quot;\n                id=&quot;volume-slider&quot;\n            &gt;&lt;/sp-slider&gt;\n        &lt;/div&gt;\n        &lt;div&gt;&lt;sp-switch&gt;Overdrive&lt;/sp-switch&gt;&lt;/div&gt;\n        &lt;div id=&quot;buttons&quot;&gt;\n            &lt;sp-button variant=&quot;primary&quot;&gt;Cancel&lt;/sp-button&gt;\n            &lt;sp-button variant=&quot;cta&quot;&gt;Continue&lt;/sp-button&gt;\n        &lt;/div&gt;\n        &lt;sp-theme color=&quot;light&quot;&gt;\n            &lt;div id=&quot;inner&quot;&gt;\n                &lt;div&gt;\n                    &lt;sp-slider\n                        value=&quot;5&quot;\n                        step=&quot;1&quot;\n                        min=&quot;1&quot;\n                        max=&quot;11&quot;\n                        label=&quot;Volume&quot;\n                        id=&quot;volume-slider&quot;\n                    &gt;&lt;/sp-slider&gt;\n                &lt;/div&gt;\n                &lt;div&gt;&lt;sp-switch&gt;Overdrive&lt;/sp-switch&gt;&lt;/div&gt;\n                &lt;div id=&quot;buttons&quot;&gt;\n                    &lt;sp-button variant=&quot;primary&quot;&gt;Cancel&lt;/sp-button&gt;\n                    &lt;sp-button variant=&quot;cta&quot;&gt;Continue&lt;/sp-button&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/sp-theme&gt;\n    &lt;/div&gt;\n&lt;/sp-theme&gt;</code-example>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><code>sp-toast</code>s display brief, temporary notifications. They are noticeable but do not disrupt the user experience and do not require an action to be taken.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/toast\n\n# or\n\nyarn add @spectrum-web-components/toast</code-example><h2 id="example" class="spectrum-Heading2--quiet">Example</h2>\n<h3 id="default" class="spectrum-Heading3">Default</h3>\n<code-example class="language-html">&lt;sp-toast&gt;This is important information that you should read, soon.&lt;/sp-toast&gt;</code-example>\n<h3 id="with-actions" class="spectrum-Heading3">With actions</h3>\n<code-example class="language-html">&lt;sp-toast&gt;\n    This is important information that you should read, soon.\n    &lt;sp-button slot=&quot;action&quot; variant=&quot;overBackground&quot; quiet&gt;\n        Do something\n    &lt;/sp-button&gt;\n&lt;/sp-toast&gt;</code-example>\n<h3 id="wrapping" class="spectrum-Heading3">Wrapping</h3>\n<code-example class="language-html">&lt;sp-toast style=&quot;width: 300px&quot;&gt;\n    This is important information that you should read, soon.\n    &lt;sp-button slot=&quot;action&quot; variant=&quot;overBackground&quot; quiet&gt;\n        Do something\n    &lt;/sp-button&gt;\n&lt;/sp-toast&gt;</code-example>\n<h3 id="variants" class="spectrum-Heading3">Variants</h3>\n<h4 id="negative">Negative</h4>\n<code-example class="language-html">&lt;sp-toast variant=&quot;negative&quot;&gt;\n    This is negative information that you should read, soon.\n&lt;/sp-toast&gt;</code-example>\n<h4 id="positive">Positive</h4>\n<code-example class="language-html">&lt;sp-toast variant=&quot;positive&quot;&gt;\n    This is positive information that you should read, soon.\n&lt;/sp-toast&gt;</code-example>\n<h4 id="info">Info</h4>\n<code-example class="language-html">&lt;sp-toast variant=&quot;info&quot;&gt;This is information that you should read.&lt;/sp-toast&gt;</code-example>\n<h2 id="accessibility" class="spectrum-Heading2--quiet">Accessibility</h2>\n<p class="spectrum-Body3">An <code>&lt;sp-toast&gt;</code> element is by default rendered with a <code>role</code> of <code>alert</code>. When rendering the <code>&lt;sp-toast&gt;</code> to a page, it should be place in a container with a <code>role</code> of <code>region</code>.</p>\n'},function(t,e){t.exports='<h2 id="description" class="spectrum-Heading2--quiet">Description</h2>\n<p class="spectrum-Body3"><code>sp-tooltip</code> allow users to get contextual help or information about specific components when hovering or focusing on them.</p>\n<h3 id="installation" class="spectrum-Heading3">Installation</h3>\n<code-example>npm install @spectrum-web-components/tooltip\n\n# or\n\nyarn add @spectrum-web-components/tooltip</code-example><h3 id="example" class="spectrum-Heading3">Example</h3>\n<p class="spectrum-Body3">Tooltips can be top, bottom, left, or right.</p>\n<code-example class="language-html">&lt;sp-tooltip open placement=&quot;top&quot;&gt;Label&lt;/sp-tooltip&gt;\n&lt;br /&gt;\n&lt;br /&gt;\n&lt;sp-tooltip open placement=&quot;bottom&quot;&gt;Label&lt;/sp-tooltip&gt;\n&lt;br /&gt;\n&lt;br /&gt;\n&lt;sp-tooltip open placement=&quot;left&quot;&gt;Label&lt;/sp-tooltip&gt;\n&lt;br /&gt;\n&lt;br /&gt;\n&lt;sp-tooltip open placement=&quot;right&quot;&gt;Label&lt;/sp-tooltip&gt;</code-example>\n<h3 id="variants" class="spectrum-Heading3">Variants</h3>\n<h4 id="informative">Informative</h4>\n<p class="spectrum-Body3">This is the informative or info variant of Tooltip\n<sp-icons-medium></sp-icons-medium></p>\n<code-example class="language-html">&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;info&quot;&gt;Label&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;info&quot;&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit\n&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;info&quot;&gt;\n    &lt;sp-icon size=&quot;s&quot; name=&quot;ui:InfoSmall&quot; slot=&quot;icon&quot;&gt;&lt;/sp-icon&gt;\n    Label\n&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;info&quot;&gt;\n    &lt;sp-icon size=&quot;s&quot; name=&quot;ui:InfoSmall&quot; slot=&quot;icon&quot;&gt;&lt;/sp-icon&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit\n&lt;/sp-tooltip&gt;</code-example>\n<h4 id="positive">Positive</h4>\n<p class="spectrum-Body3">This is the postive (a.k.a.) success variant of Tooltip</p>\n<code-example class="language-html">&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;positive&quot;&gt;Label&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;positive&quot;&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit\n&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;positive&quot;&gt;\n    &lt;sp-icon size=&quot;s&quot; name=&quot;ui:CheckmarkSmall&quot; slot=&quot;icon&quot;&gt;&lt;/sp-icon&gt;\n    Label\n&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;positive&quot;&gt;\n    &lt;sp-icon size=&quot;s&quot; name=&quot;ui:CheckmarkSmall&quot; slot=&quot;icon&quot;&gt;&lt;/sp-icon&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit\n&lt;/sp-tooltip&gt;</code-example>\n<h4 id="negative">Negative</h4>\n<p class="spectrum-Body3">This is the negative a.k.a. error variant of Tooltip</p>\n<code-example class="language-html">&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;negative&quot;&gt;Label&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;negative&quot;&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit\n&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;negative&quot;&gt;\n    &lt;sp-icon size=&quot;s&quot; name=&quot;ui:AlertSmall&quot; slot=&quot;icon&quot;&gt;&lt;/sp-icon&gt;\n    Label\n&lt;/sp-tooltip&gt;\n&lt;sp-tooltip open placement=&quot;top&quot; variant=&quot;negative&quot;&gt;\n    &lt;sp-icon size=&quot;s&quot; name=&quot;ui:AlertSmall&quot; slot=&quot;icon&quot;&gt;&lt;/sp-icon&gt;\n    Lorem ipsum dolor sit amet, consectetur adipiscing elit\n&lt;/sp-tooltip&gt;</code-example>\n'},,,,,,,,,,,function(t,e,o){"use strict";o.r(e),o.d(e,"ComponentDocs",(function(){return a}));var n=o(19),s=o(82),a=new Map;for(var l of s.keys())if(!/node_modules/.test(l)){var i=l.split("/")[1],c=/([a-zA-Z-]+)\.md$/.exec(l)[0];if("CHANGELOG.md"===c)continue;"README.md"!==c&&(i=c.replace(".md",""));var p=Object(n.a)(s(l));a.set(i,p)}}])]);
//# sourceMappingURL=3.15cce5dbd0ab8b4006e7.js.map
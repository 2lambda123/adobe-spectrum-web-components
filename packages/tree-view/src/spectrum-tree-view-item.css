/*
Copyright 2023 Adobe. All rights reserved.
This file is licensed to you under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License. You may obtain a copy
of the License at http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under
the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS
OF ANY KIND, either express or implied. See the License for the specific language
governing permissions and limitations under the License.
*/

/* THIS FILE IS MACHINE GENERATED. DO NOT EDIT */
@media (forced-colors: active) {
    .link:before {
        forced-color-adjust: none;
    }
}
:host {
    overflow: hidden;
}
:host([open]) > .link > #indicator {
    transform: var(--spectrum-logical-rotation) rotate(90deg);
}
:host([open]) > ::slotted([slot='children']) {
    block-size: auto;
    display: block;
}
:host([drop-target]) > .link,
:host([selected]) > .link {
    color: var(
        --highcontrast-treeview-item-text-color-selected,
        var(
            --mod-treeview-item-text-color-selected,
            var(--spectrum-treeview-item-text-color-selected)
        )
    );
}
:host([drop-target]) > .link:before,
:host([selected]) > .link:before {
    background-color: var(
        --highcontrast-treeview-item-background-color-selected,
        var(
            --mod-treeview-item-background-color-selected,
            var(--spectrum-treeview-item-background-color-selected)
        )
    );
}
:host([drop-target]) > .link ::slotted([slot='icon']),
:host([selected]) > .link ::slotted([slot='icon']) {
    color: var(
        --highcontrast-treeview-item-icon-color-selected,
        var(
            --mod-treeview-item-icon-color-selected,
            var(--spectrum-treeview-item-icon-color-selected)
        )
    );
}
:host([drop-target]) > .link:not(.focus-visible):before,
:host([selected]) > .link:not(.focus-visible):before {
    border-color: var(
        --highcontrast-treeview-item-border-color-selected,
        var(
            --mod-treeview-item-border-color-selected,
            var(--spectrum-treeview-item-border-color-selected)
        )
    );
}
:host([drop-target]) > .link:not(:focus-visible):before,
:host([selected]) > .link:not(:focus-visible):before {
    border-color: var(
        --highcontrast-treeview-item-border-color-selected,
        var(
            --mod-treeview-item-border-color-selected,
            var(--spectrum-treeview-item-border-color-selected)
        )
    );
}
:host([selected]) > .link:not(.focus-visible):before {
    border-width: var(
        --mod-treeview-item-border-size-selected,
        var(--spectrum-treeview-item-border-size-selected)
    );
}
:host([selected]) > .link:not(:focus-visible):before {
    border-width: var(
        --mod-treeview-item-border-size-selected,
        var(--spectrum-treeview-item-border-size-selected)
    );
}
:host([drop-target]) > .link:before {
    border-width: var(
        --mod-treeview-item-border-size,
        var(--spectrum-treeview-item-border-size)
    );
}
:host([disabled]) > .link {
    color: var(
        --highcontrast-treeview-item-text-color-disabled,
        var(
            --mod-treeview-item-text-color-disabled,
            var(--spectrum-treeview-item-text-color-disabled)
        )
    );
}
:host([disabled]) > .link:before {
    background-color: var(
        --highcontrast-treeview-item-background-color-disabled,
        transparent
    );
}
:host([disabled]) > .link .spectrum-Icon {
    color: var(
        --highcontrast-treeview-item-icon-color-disabled,
        var(
            --mod-treeview-item-icon-color-disabled,
            var(--spectrum-treeview-item-icon-color-disabled)
        )
    );
}
.link {
    align-items: center;
    box-sizing: border-box;
    color: var(
        --highcontrast-treeview-item-text-color,
        var(
            --mod-treeview-item-text-color,
            var(--spectrum-treeview-item-text-color)
        )
    );
    cursor: pointer;
    display: flex;
    flex-flow: row;
    min-block-size: var(
        --mod-treeview-item-min-block-size,
        var(--spectrum-treeview-item-min-block-size)
    );
    outline: none;
    overflow: hidden;
    padding-inline: var(
            --mod-treeview-item-padding-inline-start,
            var(--spectrum-treeview-item-padding-inline-start)
        )
        var(
            --mod-treeview-item-padding-inline-end,
            var(--spectrum-treeview-item-padding-inline-end)
        );
    -webkit-text-decoration: none;
    text-decoration: none;
    white-space: nowrap;
}
.link:before {
    background-color: #0000;
    border-color: #0000;
    border-style: solid;
    border-width: var(
            --mod-treeview-item-border-size,
            var(--spectrum-treeview-item-border-size)
        )
        0;
    box-sizing: border-box;
    color: #0000;
    content: 'Â ';
    inset-inline: 0;
    min-block-size: var(
        --mod-treeview-item-min-block-size,
        var(--spectrum-treeview-item-min-block-size)
    );
    position: absolute;
}
.link.focus-visible {
    color: var(
        --highcontrast-treeview-item-text-color-focus,
        var(
            --mod-treeview-item-text-color-focus,
            var(--spectrum-treeview-item-text-color-focus)
        )
    );
}
.link:focus-visible {
    color: var(
        --highcontrast-treeview-item-text-color-focus,
        var(
            --mod-treeview-item-text-color-focus,
            var(--spectrum-treeview-item-text-color-focus)
        )
    );
}
.link.focus-visible:before {
    background-color: var(
        --highcontrast-treeview-item-background-color-focus,
        var(
            --mod-treeview-item-background-color-focus,
            var(--spectrum-treeview-item-background-color-focus)
        )
    );
    border-color: var(
        --highcontrast-treeview-item-border-color-focus,
        var(
            --mod-treeview-item-border-color-focus,
            var(--spectrum-treeview-item-border-color-focus)
        )
    );
    border-width: var(
        --mod-treeview-item-border-size,
        var(--spectrum-treeview-item-border-size)
    );
}
.link:focus-visible:before {
    background-color: var(
        --highcontrast-treeview-item-background-color-focus,
        var(
            --mod-treeview-item-background-color-focus,
            var(--spectrum-treeview-item-background-color-focus)
        )
    );
    border-color: var(
        --highcontrast-treeview-item-border-color-focus,
        var(
            --mod-treeview-item-border-color-focus,
            var(--spectrum-treeview-item-border-color-focus)
        )
    );
    border-width: var(
        --mod-treeview-item-border-size,
        var(--spectrum-treeview-item-border-size)
    );
}
.link.focus-visible ::slotted([slot='icon']) {
    color: var(
        --highcontrast-treeview-item-icon-color-focus,
        var(
            --mod-treeview-item-icon-color-focus,
            var(--spectrum-treeview-item-icon-color-focus)
        )
    );
}
.link:focus-visible ::slotted([slot='icon']) {
    color: var(
        --highcontrast-treeview-item-icon-color-focus,
        var(
            --mod-treeview-item-icon-color-focus,
            var(--spectrum-treeview-item-icon-color-focus)
        )
    );
}
@media (hover: hover) {
    .link:hover {
        color: var(
            --highcontrast-treeview-item-text-color-focus,
            var(
                --mod-treeview-item-text-color-hover,
                var(--spectrum-treeview-item-text-color-hover)
            )
        );
    }
    .link:hover:before {
        background-color: var(
            --highcontrast-treeview-item-background-color-focus,
            var(
                --mod-treeview-item-background-color-hover,
                var(--spectrum-treeview-item-background-color-hover)
            )
        );
    }
    .link:hover ::slotted([slot='icon']) {
        color: var(
            --highcontrast-treeview-item-text-color-focus,
            var(
                --mod-treeview-item-icon-color-hover,
                var(--spectrum-treeview-item-icon-color-hover)
            )
        );
    }
}
::slotted([slot='icon']) {
    color: var(
        --highcontrast-treeview-item-icon-color,
        var(
            --mod-treeview-item-icon-color,
            var(--spectrum-treeview-item-icon-color)
        )
    );
    flex-shrink: 0;
    margin-inline-end: var(
        --mod-treeview-item-icon-gap,
        var(--spectrum-treeview-item-icon-gap)
    );
    position: relative;
    vertical-align: top;
}
#indicator {
    box-sizing: content-box;
    display: block;
    flex-shrink: 0;
    margin-inline-start: var(
        --mod-treeview-indicator-margin-inline-start,
        var(--spectrum-treeview-indicator-margin-inline-start)
    );
    padding-block: var(
        --mod-treeview-indicator-padding-block,
        var(--spectrum-treeview-indicator-padding)
    );
    padding-inline: var(
        --mod-treeview-indicator-padding-inline,
        var(--spectrum-treeview-indicator-padding)
    );
    pointer-events: all;
    position: relative;
    transform: var(--spectrum-logical-rotation);
    transition: transform ease
        var(
            --mod-treeview-indicator-animation-duration,
            var(--spectrum-treeview-indicator-animation-duration)
        );
    z-index: 1;
}
:host([indent='1']) {
    padding-inline-start: var(
        --mod-treeview-item-indentation,
        var(--spectrum-treeview-item-indentation)
    );
}
:host([indent='2']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 2
    );
}
:host([indent='3']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 3
    );
}
:host([indent='4']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 4
    );
}
:host([indent='5']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 5
    );
}
:host([indent='6']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 6
    );
}
:host([indent='7']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 7
    );
}
:host([indent='8']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 8
    );
}
:host([indent='9']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 9
    );
}
:host([indent='10']) {
    padding-inline-start: calc(
        var(
                --mod-treeview-item-indentation,
                var(--spectrum-treeview-item-indentation)
            ) * 10
    );
}
::slotted([slot='thumbnail']) {
    flex-shrink: 0;
    margin-inline-end: var(
        --mod-treeview-item-icon-gap,
        var(--spectrum-treeview-item-icon-gap)
    );
}
